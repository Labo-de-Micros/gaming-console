   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"FTM.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NVIC_EnableIRQ,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	NVIC_EnableIRQ:
  25              	.LFB108:
  26              		.file 1 "C:\\Users\\marth\\Documents\\ITBA\\Labo de micros\\Tps\\FTM_PWM\\CMSIS/core_cm4.h"
   1:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**************************************************************************//**
   2:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  * @file     core_cm4.h
   3:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  * @version  V4.30
   5:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  * @date     20. October 2015
   6:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  ******************************************************************************/
   7:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
   9:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****    All rights reserved.
  10:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****    Redistribution and use in source and binary forms, with or without
  11:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****    modification, are permitted provided that the following conditions are met:
  12:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****    - Redistributions of source code must retain the above copyright
  13:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****      notice, this list of conditions and the following disclaimer.
  14:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****    - Redistributions in binary form must reproduce the above copyright
  15:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****      notice, this list of conditions and the following disclaimer in the
  16:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****      documentation and/or other materials provided with the distribution.
  17:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****      to endorse or promote products derived from this software without
  19:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****      specific prior written permission.
  20:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****    *
  21:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****    ---------------------------------------------------------------------------*/
  33:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
  34:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
  35:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #if   defined ( __ICCARM__ )
  36:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  39:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #endif
  40:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
  41:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  42:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define __CORE_CM4_H_GENERIC
  43:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
  44:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #include <stdint.h>
  45:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
  46:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #ifdef __cplusplus
  47:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  extern "C" {
  48:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #endif
  49:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
  50:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
  51:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
  54:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  56:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
  57:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****      Unions are used for effective representation of core registers.
  59:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
  60:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****      Function-like macros are used to allow more efficient code.
  62:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
  63:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
  64:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
  65:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /*******************************************************************************
  66:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  *                 CMSIS definitions
  67:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  ******************************************************************************/
  68:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
  69:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \ingroup Cortex_M4
  70:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   @{
  71:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
  72:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
  73:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /*  CMSIS CM4 definitions */
  74:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  77:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
  79:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define __CORTEX_M                (0x04U)                                      /*!< Cortex-M Core *
  80:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
  81:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
  82:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #if   defined ( __CC_ARM )
  83:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #define __STATIC_INLINE  static __inline
  86:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
  87:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  90:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #define __STATIC_INLINE  static __inline
  91:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
  92:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #elif defined ( __GNUC__ )
  93:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #define __STATIC_INLINE  static inline
  96:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
  97:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #elif defined ( __ICCARM__ )
  98:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #define __STATIC_INLINE  static inline
 101:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 102:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #elif defined ( __TMS470__ )
 103:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #define __STATIC_INLINE  static inline
 105:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 106:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #elif defined ( __TASKING__ )
 107:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #define __STATIC_INLINE  static inline
 110:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 111:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #elif defined ( __CSMC__ )
 112:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #define __packed
 113:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #define __STATIC_INLINE  static inline
 116:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 117:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #else
 118:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #error Unknown compiler
 119:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #endif
 120:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 121:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
 123:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** */
 124:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #if defined ( __CC_ARM )
 125:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #if defined __TARGET_FPU_VFP
 126:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 127:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****       #define __FPU_USED       1U
 128:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #else
 129:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****       #define __FPU_USED       0U
 131:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #endif
 132:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #else
 133:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #define __FPU_USED         0U
 134:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #endif
 135:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 136:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 137:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #if defined __ARM_PCS_VFP
 138:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #if (__FPU_PRESENT == 1)
 139:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****       #define __FPU_USED       1U
 140:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #else
 141:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 142:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****       #define __FPU_USED       0U
 143:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #endif
 144:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #else
 145:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #define __FPU_USED         0U
 146:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #endif
 147:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 148:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #elif defined ( __GNUC__ )
 149:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 150:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 151:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****       #define __FPU_USED       1U
 152:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #else
 153:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****       #define __FPU_USED       0U
 155:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #endif
 156:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #else
 157:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #define __FPU_USED         0U
 158:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #endif
 159:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 160:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #elif defined ( __ICCARM__ )
 161:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #if defined __ARMVFP__
 162:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 163:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****       #define __FPU_USED       1U
 164:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #else
 165:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 166:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****       #define __FPU_USED       0U
 167:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #endif
 168:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #else
 169:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #define __FPU_USED         0U
 170:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #endif
 171:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 172:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #elif defined ( __TMS470__ )
 173:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 174:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 175:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****       #define __FPU_USED       1U
 176:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #else
 177:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 178:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****       #define __FPU_USED       0U
 179:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #endif
 180:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #else
 181:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #define __FPU_USED         0U
 182:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #endif
 183:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 184:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #elif defined ( __TASKING__ )
 185:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #if defined __FPU_VFP__
 186:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 187:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****       #define __FPU_USED       1U
 188:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #else
 189:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 190:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****       #define __FPU_USED       0U
 191:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #endif
 192:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #else
 193:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #define __FPU_USED         0U
 194:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #endif
 195:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 196:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #elif defined ( __CSMC__ )
 197:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 198:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 199:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****       #define __FPU_USED       1U
 200:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #else
 201:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 202:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****       #define __FPU_USED       0U
 203:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #endif
 204:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #else
 205:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #define __FPU_USED         0U
 206:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #endif
 207:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 208:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #endif
 209:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 210:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 211:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 212:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #include "core_cmSimd.h"                 /* Compiler specific SIMD Intrinsics */
 213:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 214:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #ifdef __cplusplus
 215:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** }
 216:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #endif
 217:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 218:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 219:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 220:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #ifndef __CMSIS_GENERIC
 221:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 222:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 223:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 224:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 225:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #ifdef __cplusplus
 226:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  extern "C" {
 227:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #endif
 228:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 229:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* check device defines and use defaults */
 230:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 231:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #ifndef __CM4_REV
 232:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #define __CM4_REV               0x0000U
 233:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 234:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #endif
 235:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 236:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #ifndef __FPU_PRESENT
 237:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #define __FPU_PRESENT             0U
 238:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 239:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #endif
 240:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 241:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #ifndef __MPU_PRESENT
 242:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #define __MPU_PRESENT             0U
 243:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 244:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #endif
 245:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 246:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 247:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #define __NVIC_PRIO_BITS          4U
 248:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 249:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #endif
 250:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 251:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 252:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 253:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 254:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #endif
 255:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #endif
 256:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 257:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 258:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
 259:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 260:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 261:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 262:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     \li to specify the access to peripheral variables.
 263:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 264:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** */
 265:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #ifdef __cplusplus
 266:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 267:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #else
 268:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 269:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #endif
 270:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 271:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 272:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 273:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* following defines should be used for structure members */
 274:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 275:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 276:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 277:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 278:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /*@} end of group Cortex_M4 */
 279:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 280:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 281:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 282:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /*******************************************************************************
 283:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  *                 Register Abstraction
 284:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   Core Register contain:
 285:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   - Core Register
 286:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   - Core NVIC Register
 287:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   - Core SCB Register
 288:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   - Core SysTick Register
 289:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   - Core Debug Register
 290:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   - Core MPU Register
 291:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   - Core FPU Register
 292:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  ******************************************************************************/
 293:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
 294:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 295:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 296:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** */
 297:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 298:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
 299:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \ingroup    CMSIS_core_register
 300:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 301:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief      Core Register type definitions.
 302:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   @{
 303:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
 304:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 305:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
 306:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 307:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
 308:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** typedef union
 309:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** {
 310:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   struct
 311:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   {
 312:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 313:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 314:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 315:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 316:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 317:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 318:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 319:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 320:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 321:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 322:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** } APSR_Type;
 323:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 324:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* APSR Register Definitions */
 325:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 326:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 327:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 328:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 329:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 330:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 331:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 332:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 333:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 334:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 335:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 336:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 337:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 338:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 339:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 340:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 341:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 342:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 343:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 344:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
 345:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 346:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
 347:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** typedef union
 348:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** {
 349:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   struct
 350:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   {
 351:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 352:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 353:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 354:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 355:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** } IPSR_Type;
 356:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 357:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* IPSR Register Definitions */
 358:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 359:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 360:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 361:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 362:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
 363:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 364:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
 365:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** typedef union
 366:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** {
 367:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   struct
 368:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   {
 369:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 370:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved */
 371:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 372:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 373:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 374:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 375:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 376:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 377:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 378:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 379:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 380:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 381:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 382:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** } xPSR_Type;
 383:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 384:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* xPSR Register Definitions */
 385:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 386:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 387:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 388:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 389:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 390:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 391:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 392:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 393:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 394:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 395:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 396:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 397:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 398:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 399:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 400:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 401:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 402:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 403:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 404:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 405:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 406:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 407:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 408:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 409:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 410:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 411:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 412:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 413:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
 414:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 415:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
 416:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** typedef union
 417:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** {
 418:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   struct
 419:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   {
 420:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 421:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 422:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 423:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 424:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 425:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 426:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** } CONTROL_Type;
 427:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 428:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* CONTROL Register Definitions */
 429:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 430:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 431:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 432:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 433:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 434:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 435:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 436:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 437:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 438:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /*@} end of group CMSIS_CORE */
 439:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 440:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 441:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
 442:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \ingroup    CMSIS_core_register
 443:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 444:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 445:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   @{
 446:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
 447:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 448:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
 449:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 450:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
 451:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** typedef struct
 452:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** {
 453:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 454:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****         uint32_t RESERVED0[24U];
 455:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 456:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****         uint32_t RSERVED1[24U];
 457:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 458:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****         uint32_t RESERVED2[24U];
 459:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 460:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****         uint32_t RESERVED3[24U];
 461:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 462:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****         uint32_t RESERVED4[56U];
 463:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 464:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****         uint32_t RESERVED5[644U];
 465:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 466:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** }  NVIC_Type;
 467:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 468:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 469:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 470:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 471:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 472:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /*@} end of group CMSIS_NVIC */
 473:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 474:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 475:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
 476:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \ingroup  CMSIS_core_register
 477:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 478:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 479:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   @{
 480:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
 481:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 482:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
 483:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 484:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
 485:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** typedef struct
 486:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** {
 487:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 488:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 489:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 490:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 491:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 492:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 493:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 494:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 495:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 496:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 497:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 498:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 499:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 500:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 501:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 502:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 503:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 504:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 505:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 506:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****         uint32_t RESERVED0[5U];
 507:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 508:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** } SCB_Type;
 509:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 510:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* SCB CPUID Register Definitions */
 511:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 512:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 513:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 514:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 515:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 516:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 517:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 518:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 519:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 520:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 521:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 522:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 523:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 524:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 525:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 526:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 527:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 528:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 529:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 530:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 531:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 532:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 533:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 534:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 535:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 536:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 537:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 538:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 539:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 540:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 541:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 542:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 543:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 544:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 545:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 546:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 547:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 548:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 549:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 550:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 551:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 552:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 553:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 554:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 555:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 556:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 557:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 558:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 559:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 560:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 561:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 562:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 563:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 564:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 565:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 566:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 567:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 568:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 569:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 570:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 571:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 572:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 573:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 574:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 575:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 576:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 577:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 578:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 579:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 580:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 581:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 582:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 583:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* SCB System Control Register Definitions */
 584:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 585:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 586:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 587:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 588:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 589:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 590:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 591:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 592:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 593:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* SCB Configuration Control Register Definitions */
 594:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 595:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 596:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 597:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 598:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 599:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 600:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 601:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 602:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 603:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 604:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 605:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 606:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 607:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 608:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 609:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 610:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 611:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 612:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 613:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 614:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 615:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 616:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 617:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 618:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 619:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 620:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 621:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 622:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 623:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 624:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 625:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 626:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 627:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 628:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 629:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 630:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 631:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 632:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 633:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 634:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 635:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 636:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 637:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 638:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 639:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 640:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 641:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 642:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 643:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 644:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 645:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 646:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 647:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 648:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 649:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 650:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 651:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 652:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 653:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 654:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 655:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 656:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 657:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 658:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 659:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 660:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 661:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 662:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 663:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 664:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 665:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 666:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 667:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 668:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 669:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 670:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 671:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 672:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 673:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 674:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 675:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 676:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 677:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 678:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 679:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 680:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 681:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 682:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 683:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 684:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 685:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 686:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 687:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 688:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 689:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 690:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 691:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /*@} end of group CMSIS_SCB */
 692:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 693:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 694:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
 695:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \ingroup  CMSIS_core_register
 696:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 697:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 698:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   @{
 699:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
 700:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 701:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
 702:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 703:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
 704:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** typedef struct
 705:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** {
 706:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****         uint32_t RESERVED0[1U];
 707:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 708:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 709:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** } SCnSCB_Type;
 710:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 711:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 712:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 713:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 714:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 715:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* Auxiliary Control Register Definitions */
 716:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 717:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 718:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 719:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 720:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 721:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 722:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 723:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 724:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 725:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 726:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 727:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 728:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 729:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 730:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 731:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 732:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 733:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 734:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
 735:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \ingroup  CMSIS_core_register
 736:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 737:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 738:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   @{
 739:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
 740:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 741:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
 742:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 743:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
 744:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** typedef struct
 745:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** {
 746:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 747:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 748:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 749:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 750:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** } SysTick_Type;
 751:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 752:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* SysTick Control / Status Register Definitions */
 753:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 754:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 755:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 756:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 757:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 758:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 759:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 760:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 761:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 762:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 763:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 764:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 765:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* SysTick Reload Register Definitions */
 766:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 767:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 768:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 769:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* SysTick Current Register Definitions */
 770:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 771:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 772:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 773:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* SysTick Calibration Register Definitions */
 774:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 775:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 776:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 777:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 778:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 779:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 780:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 781:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 782:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 783:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /*@} end of group CMSIS_SysTick */
 784:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 785:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 786:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
 787:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \ingroup  CMSIS_core_register
 788:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 789:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 790:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   @{
 791:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
 792:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 793:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
 794:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 795:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
 796:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** typedef struct
 797:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** {
 798:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __OM  union
 799:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   {
 800:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 801:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 802:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 803:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 804:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****         uint32_t RESERVED0[864U];
 805:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 806:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****         uint32_t RESERVED1[15U];
 807:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 808:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****         uint32_t RESERVED2[15U];
 809:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 810:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****         uint32_t RESERVED3[29U];
 811:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 812:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 813:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 814:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****         uint32_t RESERVED4[43U];
 815:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 816:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 817:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****         uint32_t RESERVED5[6U];
 818:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 819:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 820:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 821:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 822:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 823:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 824:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 825:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 826:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 827:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 828:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 829:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 830:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** } ITM_Type;
 831:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 832:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 833:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 834:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 835:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 836:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* ITM Trace Control Register Definitions */
 837:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 838:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 839:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 840:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 841:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 842:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 843:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 844:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 845:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 846:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 847:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 848:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 849:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 850:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 851:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 852:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 853:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 854:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 855:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 856:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 857:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 858:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 859:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 860:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 861:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 862:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 863:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 864:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* ITM Integration Write Register Definitions */
 865:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 866:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 867:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 868:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* ITM Integration Read Register Definitions */
 869:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 870:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 871:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 872:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 873:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 874:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 875:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 876:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* ITM Lock Status Register Definitions */
 877:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 878:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 879:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 880:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 881:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 882:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 883:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 884:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 885:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 886:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 887:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 888:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 889:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
 890:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \ingroup  CMSIS_core_register
 891:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 892:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 893:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   @{
 894:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
 895:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 896:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
 897:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 898:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
 899:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** typedef struct
 900:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** {
 901:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 902:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 903:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 904:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 905:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 906:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 907:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 908:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 909:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 910:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 911:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 912:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****         uint32_t RESERVED0[1U];
 913:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 914:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 915:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 916:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****         uint32_t RESERVED1[1U];
 917:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 918:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 919:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 920:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****         uint32_t RESERVED2[1U];
 921:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 922:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 923:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 924:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** } DWT_Type;
 925:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 926:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* DWT Control Register Definitions */
 927:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 928:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 929:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 930:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 931:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 932:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 933:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 934:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 935:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 936:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 937:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 938:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 939:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 940:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 941:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 942:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 943:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 944:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 945:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 946:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 947:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 948:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 949:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 950:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 951:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 952:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 953:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 954:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 955:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 956:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 957:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 958:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 959:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 960:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 961:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 962:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 963:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 964:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 965:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 966:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 967:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 968:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 969:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 970:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 971:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 972:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 973:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 974:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 975:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 976:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 977:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 978:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 979:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 980:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 981:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* DWT CPI Count Register Definitions */
 982:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 983:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 984:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 985:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 986:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 987:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 988:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 989:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* DWT Sleep Count Register Definitions */
 990:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 991:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 992:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 993:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* DWT LSU Count Register Definitions */
 994:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 995:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 996:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
 997:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 998:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 999:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1000:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1001:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1002:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1003:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1004:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1005:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* DWT Comparator Function Register Definitions */
1006:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1007:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1008:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1009:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1010:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1011:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1012:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1013:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1014:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1015:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1016:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1017:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1018:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1019:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1020:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1021:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1022:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1023:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1024:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1025:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1026:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1027:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1028:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1029:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1030:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1031:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1032:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1033:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1034:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1035:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1036:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
1037:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \ingroup  CMSIS_core_register
1038:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1039:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1040:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   @{
1041:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
1042:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1043:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
1044:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1045:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
1046:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** typedef struct
1047:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** {
1048:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1049:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1050:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****         uint32_t RESERVED0[2U];
1051:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1052:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****         uint32_t RESERVED1[55U];
1053:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1054:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****         uint32_t RESERVED2[131U];
1055:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1056:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1057:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1058:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****         uint32_t RESERVED3[759U];
1059:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1060:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1061:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1062:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****         uint32_t RESERVED4[1U];
1063:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1064:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1065:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1066:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****         uint32_t RESERVED5[39U];
1067:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1068:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1069:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****         uint32_t RESERVED7[8U];
1070:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1071:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1072:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** } TPI_Type;
1073:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1074:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1075:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1076:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1077:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1078:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1079:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1080:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1081:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1082:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1083:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1084:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1085:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1086:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1087:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1088:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1089:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1090:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1091:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1092:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1093:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1094:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1095:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1096:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1097:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1098:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1099:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1100:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1101:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1102:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* TPI TRIGGER Register Definitions */
1103:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1104:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1105:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1106:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1107:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1108:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1109:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1110:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1111:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1112:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1113:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1114:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1115:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1116:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1117:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1118:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1119:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1120:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1121:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1122:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1123:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1124:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1125:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1126:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1127:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1128:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1129:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1130:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1131:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1132:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1133:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1134:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1135:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1136:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1137:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1138:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1139:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1140:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1141:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1142:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1143:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1144:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1145:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1146:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1147:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1148:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1149:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1150:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1151:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1152:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1153:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1154:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1155:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1156:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1157:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1158:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1159:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1160:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1161:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1162:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* TPI DEVID Register Definitions */
1163:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1164:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1165:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1166:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1167:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1168:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1169:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1170:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1171:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1172:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1173:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1174:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1175:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1176:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1177:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1178:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1179:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1180:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1181:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1182:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1183:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1184:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1185:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1186:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1187:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1188:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1189:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1190:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1191:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #if (__MPU_PRESENT == 1U)
1192:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
1193:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \ingroup  CMSIS_core_register
1194:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1195:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1196:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   @{
1197:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
1198:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1199:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
1200:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1201:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
1202:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** typedef struct
1203:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** {
1204:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1205:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1206:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1207:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1208:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1209:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1210:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1211:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1212:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1213:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1214:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1215:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** } MPU_Type;
1216:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1217:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* MPU Type Register Definitions */
1218:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1219:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1220:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1221:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1222:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1223:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1224:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1225:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1226:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1227:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* MPU Control Register Definitions */
1228:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1229:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1230:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1231:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1232:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1233:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1234:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1235:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1236:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1237:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* MPU Region Number Register Definitions */
1238:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1239:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1240:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1241:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* MPU Region Base Address Register Definitions */
1242:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1243:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1244:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1245:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1246:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1247:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1248:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1249:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1250:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1251:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1252:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1253:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1254:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1255:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1256:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1257:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1258:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1259:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1260:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1261:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1262:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1263:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1264:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1265:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1266:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1267:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1268:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1269:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1270:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1271:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1272:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1273:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1274:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1275:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1276:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1277:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1278:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1279:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1280:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1281:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1282:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /*@} end of group CMSIS_MPU */
1283:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #endif
1284:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1285:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1286:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #if (__FPU_PRESENT == 1U)
1287:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
1288:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \ingroup  CMSIS_core_register
1289:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1290:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1291:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   @{
1292:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
1293:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1294:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
1295:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1296:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
1297:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** typedef struct
1298:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** {
1299:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****         uint32_t RESERVED0[1U];
1300:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1301:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1302:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1303:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1304:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1305:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** } FPU_Type;
1306:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1307:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1308:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1309:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1310:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1311:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1312:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1313:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1314:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1315:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1316:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1317:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1318:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1319:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1320:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1321:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1322:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1323:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1324:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1325:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1326:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1327:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1328:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1329:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1330:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1331:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1332:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1333:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1334:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1335:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1336:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1337:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1338:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1339:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1340:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1341:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1342:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1343:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1344:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1345:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1346:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1347:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1348:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1349:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1350:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1351:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1352:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1353:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1354:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1355:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1356:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1357:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1358:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1359:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1360:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1361:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1362:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1363:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1364:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1365:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1366:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1367:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1368:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1369:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1370:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1371:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1372:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1373:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1374:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1375:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1376:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1377:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1378:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1379:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1380:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1381:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1382:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1383:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1384:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1385:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1386:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1387:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1388:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1389:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1390:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /*@} end of group CMSIS_FPU */
1391:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #endif
1392:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1393:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1394:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
1395:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \ingroup  CMSIS_core_register
1396:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1397:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1398:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   @{
1399:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
1400:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1401:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
1402:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1403:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
1404:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** typedef struct
1405:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** {
1406:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1407:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1408:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1409:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1410:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** } CoreDebug_Type;
1411:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1412:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1413:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1414:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1415:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1416:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1417:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1418:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1419:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1420:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1421:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1422:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1423:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1424:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1425:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1426:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1427:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1428:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1429:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1430:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1431:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1432:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1433:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1434:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1435:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1436:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1437:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1438:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1439:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1440:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1441:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1442:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1443:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1444:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1445:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1446:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1447:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1448:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1449:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1450:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1451:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1452:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1453:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1454:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1455:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1456:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1457:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1458:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1459:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1460:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1461:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1462:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1463:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1464:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1465:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1466:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1467:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1468:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1469:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1470:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1471:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1472:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1473:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1474:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1475:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1476:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1477:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1478:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1479:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1480:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1481:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1482:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1483:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1484:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1485:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1486:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1487:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1488:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1489:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1490:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1491:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1492:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1493:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1494:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1495:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1496:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1497:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1498:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1499:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
1500:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \ingroup    CMSIS_core_register
1501:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1502:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1503:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   @{
1504:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
1505:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1506:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
1507:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1508:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \param[in] field  Name of the register bit field.
1509:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \param[in] value  Value of the bit field.
1510:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \return           Masked and shifted value.
1511:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** */
1512:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
1513:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1514:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
1515:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1516:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \param[in] field  Name of the register bit field.
1517:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \param[in] value  Value of register.
1518:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \return           Masked and shifted bit field value.
1519:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** */
1520:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1521:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1522:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1523:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1524:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1525:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
1526:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \ingroup    CMSIS_core_register
1527:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1528:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1529:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   @{
1530:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
1531:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1532:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1533:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1534:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1535:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1536:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1537:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1538:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1539:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1540:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1541:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1542:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1543:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1544:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1545:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1546:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1547:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1548:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1549:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1550:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1551:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #if (__MPU_PRESENT == 1U)
1552:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1553:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1554:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #endif
1555:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1556:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #if (__FPU_PRESENT == 1U)
1557:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1558:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1559:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** #endif
1560:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1561:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /*@} */
1562:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1563:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1564:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1565:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /*******************************************************************************
1566:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  *                Hardware Abstraction Layer
1567:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   Core Function Interface contains:
1568:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   - Core NVIC Functions
1569:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   - Core SysTick Functions
1570:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   - Core Debug Functions
1571:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   - Core Register Access Functions
1572:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  ******************************************************************************/
1573:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
1574:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1575:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** */
1576:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1577:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1578:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1579:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1580:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
1581:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1582:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1583:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1584:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   @{
1585:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
1586:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1587:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
1588:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief   Set Priority Grouping
1589:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1590:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1591:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****            Only values from 0..7 are used.
1592:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****            In case of a conflict between priority grouping and available
1593:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1594:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1595:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
1596:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1597:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** {
1598:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   uint32_t reg_value;
1599:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1600:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1601:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1602:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1603:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   reg_value  =  (reg_value                                   |
1604:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1605:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
1606:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   SCB->AIRCR =  reg_value;
1607:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** }
1608:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1609:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1610:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
1611:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief   Get Priority Grouping
1612:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1613:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1614:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
1615:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1616:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** {
1617:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1618:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** }
1619:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1620:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** 
1621:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** /**
1622:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \brief   Enable External Interrupt
1623:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
1624:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1625:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****  */
1626:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1627:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** {
  27              		.loc 1 1627 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 0346     		mov	r3, r0
  40 0008 FB71     		strb	r3, [r7, #7]
1628:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
  41              		.loc 1 1628 0
  42 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  43 000c 03F01F02 		and	r2, r3, #31
  44 0010 0749     		ldr	r1, .L2
  45 0012 97F90730 		ldrsb	r3, [r7, #7]
  46 0016 5B09     		lsrs	r3, r3, #5
  47 0018 0120     		movs	r0, #1
  48 001a 00FA02F2 		lsl	r2, r0, r2
  49 001e 41F82320 		str	r2, [r1, r3, lsl #2]
1629:C:\Users\marth\Documents\ITBA\Labo de micros\Tps\FTM_PWM\CMSIS\core_cm4.h **** }
  50              		.loc 1 1629 0
  51 0022 00BF     		nop
  52 0024 0C37     		adds	r7, r7, #12
  53              		.cfi_def_cfa_offset 4
  54 0026 BD46     		mov	sp, r7
  55              		.cfi_def_cfa_register 13
  56              		@ sp needed
  57 0028 5DF8047B 		ldr	r7, [sp], #4
  58              		.cfi_restore 7
  59              		.cfi_def_cfa_offset 0
  60 002c 7047     		bx	lr
  61              	.L3:
  62 002e 00BF     		.align	2
  63              	.L2:
  64 0030 00E100E0 		.word	-536813312
  65              		.cfi_endproc
  66              	.LFE108:
  68              		.global	PWM_modulus
  69              		.section	.data.PWM_modulus,"aw",%progbits
  70              		.align	1
  73              	PWM_modulus:
  74 0000 E703     		.short	999
  75              		.global	PWM_duty
  76              		.section	.data.PWM_duty,"aw",%progbits
  77              		.align	1
  80              	PWM_duty:
  81 0000 2C01     		.short	300
  82              		.section	.text.FTM0_IRQHandler,"ax",%progbits
  83              		.align	1
  84              		.global	FTM0_IRQHandler
  85              		.syntax unified
  86              		.thumb
  87              		.thumb_func
  88              		.fpu fpv4-sp-d16
  90              	FTM0_IRQHandler:
  91              	.LFB123:
  92              		.file 2 "../source/FTM.c"
   1:../source/FTM.c **** 
   2:../source/FTM.c **** #include "FTM.h"
   3:../source/FTM.c **** #include "PORT.h"
   4:../source/FTM.c **** #include "FTM.h"
   5:../source/FTM.c **** #include "gpio.h"
   6:../source/FTM.c **** 
   7:../source/FTM.c **** //enum { PA, PB, PC, PD, PE };
   8:../source/FTM.c **** // Convert port and number into pin ID
   9:../source/FTM.c **** // Ex: PTB5  -> PORTNUM2PIN(PB,5)  -> 0x25
  10:../source/FTM.c **** //     PTC22 -> PORTNUM2PIN(PC,22) -> 0x56
  11:../source/FTM.c **** //#define PORTNUM2PIN(p,n)    (((p)<<5) + (n))
  12:../source/FTM.c **** //#define PIN2PORT(p)         (((p)>>5) & 0x07)
  13:../source/FTM.c **** //#define PIN2NUM(p)          ((p) & 0x1F)
  14:../source/FTM.c **** 
  15:../source/FTM.c **** 
  16:../source/FTM.c **** 
  17:../source/FTM.c **** 
  18:../source/FTM.c **** void PWM_Init(uint16_t modulos, FTM_Prescal_t prescaler,uint16_t duty);
  19:../source/FTM.c **** //modulus en cantidad de tick totales para obtener el periodo
  20:../source/FTM.c **** //prescaler en el enum definifo como FTM_PSC_XX
  21:../source/FTM.c **** 
  22:../source/FTM.c **** 
  23:../source/FTM.c **** void PWM_ISR(void);
  24:../source/FTM.c **** 
  25:../source/FTM.c **** 
  26:../source/FTM.c **** 
  27:../source/FTM.c **** 
  28:../source/FTM.c **** uint16_t PWM_modulus = 1000-1;
  29:../source/FTM.c **** uint16_t PWM_duty    = 300;//5000-1;
  30:../source/FTM.c **** 
  31:../source/FTM.c **** /* FTM0 fault, overflow and channels interrupt handler*/
  32:../source/FTM.c **** __ISR__ FTM0_IRQHandler(void)
  33:../source/FTM.c **** {
  93              		.loc 2 33 0
  94              		.cfi_startproc
  95              		@ Stack Align: May be called with mis-aligned SP.
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 1, uses_anonymous_args = 0
  98 0000 6846     		mov	r0, sp
  99              		.cfi_register 13, 0
 100 0002 20F00701 		bic	r1, r0, #7
 101 0006 8D46     		mov	sp, r1
 102 0008 89B5     		push	{r0, r3, r7, lr}
 103              		.cfi_def_cfa_offset 16
 104              		.cfi_offset 13, -16
 105              		.cfi_offset 3, -12
 106              		.cfi_offset 7, -8
 107              		.cfi_offset 14, -4
 108 000a 00AF     		add	r7, sp, #0
 109              		.cfi_def_cfa_register 7
  34:../source/FTM.c **** 	PWM_ISR();
 110              		.loc 2 34 0
 111 000c FFF7FEFF 		bl	PWM_ISR
  35:../source/FTM.c **** }
 112              		.loc 2 35 0
 113 0010 00BF     		nop
 114 0012 BD46     		mov	sp, r7
 115              		.cfi_def_cfa_register 13
 116              		@ sp needed
 117 0014 BDE88940 		pop	{r0, r3, r7, lr}
 118              		.cfi_restore 14
 119              		.cfi_restore 7
 120              		.cfi_restore 3
 121              		.cfi_restore 0
 122              		.cfi_def_cfa_offset 0
 123 0018 8546     		mov	sp, r0
 124 001a 7047     		bx	lr
 125              		.cfi_endproc
 126              	.LFE123:
 128              		.section	.text.PWM_ISR,"ax",%progbits
 129              		.align	1
 130              		.global	PWM_ISR
 131              		.syntax unified
 132              		.thumb
 133              		.thumb_func
 134              		.fpu fpv4-sp-d16
 136              	PWM_ISR:
 137              	.LFB124:
  36:../source/FTM.c **** 
  37:../source/FTM.c **** void PWM_ISR (void)
  38:../source/FTM.c **** {
 138              		.loc 2 38 0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 1, uses_anonymous_args = 0
 142 0000 80B5     		push	{r7, lr}
 143              		.cfi_def_cfa_offset 8
 144              		.cfi_offset 7, -8
 145              		.cfi_offset 14, -4
 146 0002 00AF     		add	r7, sp, #0
 147              		.cfi_def_cfa_register 7
  39:../source/FTM.c **** 	FTM_ClearOverflowFlag (FTM0);
 148              		.loc 2 39 0
 149 0004 0248     		ldr	r0, .L6
 150 0006 FFF7FEFF 		bl	FTM_ClearOverflowFlag
  40:../source/FTM.c **** 	//set_DutyPWM(FTM0, 0, percent);
  41:../source/FTM.c **** 	//percent +=10;
  42:../source/FTM.c **** 	//percent= percent%100;
  43:../source/FTM.c **** 
  44:../source/FTM.c **** 
  45:../source/FTM.c **** 	//FTM_SetCounter(FTM0, 0, PWM_duty++);  //change DC
  46:../source/FTM.c **** 	//GPIO_Toggle(PTC, 1 << 8);			  //GPIO pin PTC8
  47:../source/FTM.c **** 	//PWM_duty %= PWM_modulus;
  48:../source/FTM.c **** }
 151              		.loc 2 48 0
 152 000a 00BF     		nop
 153 000c 80BD     		pop	{r7, pc}
 154              	.L7:
 155 000e 00BF     		.align	2
 156              	.L6:
 157 0010 00800340 		.word	1073971200
 158              		.cfi_endproc
 159              	.LFE124:
 161              		.section	.text.FTM_Init,"ax",%progbits
 162              		.align	1
 163              		.global	FTM_Init
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 167              		.fpu fpv4-sp-d16
 169              	FTM_Init:
 170              	.LFB125:
  49:../source/FTM.c **** 
  50:../source/FTM.c **** 
  51:../source/FTM.c **** void FTM_Init (FTM_t ftm)
  52:../source/FTM.c **** {
 171              		.loc 2 52 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 8
 174              		@ frame_needed = 1, uses_anonymous_args = 0
 175 0000 80B5     		push	{r7, lr}
 176              		.cfi_def_cfa_offset 8
 177              		.cfi_offset 7, -8
 178              		.cfi_offset 14, -4
 179 0002 82B0     		sub	sp, sp, #8
 180              		.cfi_def_cfa_offset 16
 181 0004 00AF     		add	r7, sp, #0
 182              		.cfi_def_cfa_register 7
 183 0006 7860     		str	r0, [r7, #4]
  53:../source/FTM.c **** 
  54:../source/FTM.c **** 	if(ftm == FTM0)
 184              		.loc 2 54 0
 185 0008 7B68     		ldr	r3, [r7, #4]
 186 000a 3C4A     		ldr	r2, .L13
 187 000c 9342     		cmp	r3, r2
 188 000e 14D1     		bne	.L9
  55:../source/FTM.c **** 	{
  56:../source/FTM.c **** 		SIM->SCGC6 |= SIM_SCGC6_FTM0_MASK;
 189              		.loc 2 56 0
 190 0010 3B4B     		ldr	r3, .L13+4
 191 0012 03F58153 		add	r3, r3, #4128
 192 0016 1C33     		adds	r3, r3, #28
 193 0018 1B68     		ldr	r3, [r3]
 194 001a 3949     		ldr	r1, .L13+4
 195 001c 43F08072 		orr	r2, r3, #16777216
 196 0020 01F58153 		add	r3, r1, #4128
 197 0024 1C33     		adds	r3, r3, #28
 198 0026 1A60     		str	r2, [r3]
  57:../source/FTM.c **** 		NVIC_EnableIRQ(FTM0_IRQn);
 199              		.loc 2 57 0
 200 0028 2A20     		movs	r0, #42
 201 002a FFF7FEFF 		bl	NVIC_EnableIRQ
  58:../source/FTM.c **** 		FTM0->PWMLOAD = FTM_PWMLOAD_LDOK_MASK | 0x0F;
 202              		.loc 2 58 0
 203 002e 334B     		ldr	r3, .L13
 204 0030 40F20F22 		movw	r2, #527
 205 0034 C3F89820 		str	r2, [r3, #152]
 206 0038 55E0     		b	.L10
 207              	.L9:
  59:../source/FTM.c **** 	}
  60:../source/FTM.c **** 	else if(ftm == FTM1)
 208              		.loc 2 60 0
 209 003a 7B68     		ldr	r3, [r7, #4]
 210 003c 314A     		ldr	r2, .L13+8
 211 003e 9342     		cmp	r3, r2
 212 0040 14D1     		bne	.L11
  61:../source/FTM.c **** 	{
  62:../source/FTM.c **** 		SIM->SCGC6 |= SIM_SCGC6_FTM1_MASK;
 213              		.loc 2 62 0
 214 0042 2F4B     		ldr	r3, .L13+4
 215 0044 03F58153 		add	r3, r3, #4128
 216 0048 1C33     		adds	r3, r3, #28
 217 004a 1B68     		ldr	r3, [r3]
 218 004c 2C49     		ldr	r1, .L13+4
 219 004e 43F00072 		orr	r2, r3, #33554432
 220 0052 01F58153 		add	r3, r1, #4128
 221 0056 1C33     		adds	r3, r3, #28
 222 0058 1A60     		str	r2, [r3]
  63:../source/FTM.c **** 		NVIC_EnableIRQ(FTM1_IRQn);
 223              		.loc 2 63 0
 224 005a 2B20     		movs	r0, #43
 225 005c FFF7FEFF 		bl	NVIC_EnableIRQ
  64:../source/FTM.c **** 		FTM1->PWMLOAD = FTM_PWMLOAD_LDOK_MASK | 0x0F;
 226              		.loc 2 64 0
 227 0060 284B     		ldr	r3, .L13+8
 228 0062 40F20F22 		movw	r2, #527
 229 0066 C3F89820 		str	r2, [r3, #152]
 230 006a 3CE0     		b	.L10
 231              	.L11:
  65:../source/FTM.c **** 	}
  66:../source/FTM.c **** 	else if (ftm == FTM2)
 232              		.loc 2 66 0
 233 006c 7B68     		ldr	r3, [r7, #4]
 234 006e 264A     		ldr	r2, .L13+12
 235 0070 9342     		cmp	r3, r2
 236 0072 20D1     		bne	.L12
  67:../source/FTM.c **** 	{
  68:../source/FTM.c **** 		SIM->SCGC6 |= SIM_SCGC6_FTM2_MASK;
 237              		.loc 2 68 0
 238 0074 224B     		ldr	r3, .L13+4
 239 0076 03F58153 		add	r3, r3, #4128
 240 007a 1C33     		adds	r3, r3, #28
 241 007c 1B68     		ldr	r3, [r3]
 242 007e 2049     		ldr	r1, .L13+4
 243 0080 43F08062 		orr	r2, r3, #67108864
 244 0084 01F58153 		add	r3, r1, #4128
 245 0088 1C33     		adds	r3, r3, #28
 246 008a 1A60     		str	r2, [r3]
  69:../source/FTM.c **** 		SIM->SCGC3 |= SIM_SCGC3_FTM2_MASK;
 247              		.loc 2 69 0
 248 008c 1C4B     		ldr	r3, .L13+4
 249 008e 03F58153 		add	r3, r3, #4128
 250 0092 1033     		adds	r3, r3, #16
 251 0094 1B68     		ldr	r3, [r3]
 252 0096 1A49     		ldr	r1, .L13+4
 253 0098 43F08072 		orr	r2, r3, #16777216
 254 009c 01F58153 		add	r3, r1, #4128
 255 00a0 1033     		adds	r3, r3, #16
 256 00a2 1A60     		str	r2, [r3]
  70:../source/FTM.c **** 		NVIC_EnableIRQ(FTM2_IRQn);
 257              		.loc 2 70 0
 258 00a4 2C20     		movs	r0, #44
 259 00a6 FFF7FEFF 		bl	NVIC_EnableIRQ
  71:../source/FTM.c **** 		FTM2->PWMLOAD = FTM_PWMLOAD_LDOK_MASK | 0x0F;
 260              		.loc 2 71 0
 261 00aa 174B     		ldr	r3, .L13+12
 262 00ac 40F20F22 		movw	r2, #527
 263 00b0 C3F89820 		str	r2, [r3, #152]
 264 00b4 17E0     		b	.L10
 265              	.L12:
  72:../source/FTM.c **** 	}
  73:../source/FTM.c **** 	else if (ftm == FTM3)
 266              		.loc 2 73 0
 267 00b6 7B68     		ldr	r3, [r7, #4]
 268 00b8 144A     		ldr	r2, .L13+16
 269 00ba 9342     		cmp	r3, r2
 270 00bc 13D1     		bne	.L10
  74:../source/FTM.c **** 	{
  75:../source/FTM.c **** 		SIM->SCGC3 |= SIM_SCGC3_FTM3_MASK;
 271              		.loc 2 75 0
 272 00be 104B     		ldr	r3, .L13+4
 273 00c0 03F58153 		add	r3, r3, #4128
 274 00c4 1033     		adds	r3, r3, #16
 275 00c6 1B68     		ldr	r3, [r3]
 276 00c8 0D49     		ldr	r1, .L13+4
 277 00ca 43F00072 		orr	r2, r3, #33554432
 278 00ce 01F58153 		add	r3, r1, #4128
 279 00d2 1033     		adds	r3, r3, #16
 280 00d4 1A60     		str	r2, [r3]
  76:../source/FTM.c **** 		NVIC_EnableIRQ(FTM3_IRQn);
 281              		.loc 2 76 0
 282 00d6 4720     		movs	r0, #71
 283 00d8 FFF7FEFF 		bl	NVIC_EnableIRQ
  77:../source/FTM.c **** 		FTM3->PWMLOAD = FTM_PWMLOAD_LDOK_MASK | 0x0F;
 284              		.loc 2 77 0
 285 00dc 0B4B     		ldr	r3, .L13+16
 286 00de 40F20F22 		movw	r2, #527
 287 00e2 C3F89820 		str	r2, [r3, #152]
 288              	.L10:
  78:../source/FTM.c **** 	}
  79:../source/FTM.c **** 
  80:../source/FTM.c **** 
  81:../source/FTM.c **** 	PWM_Init(10000-1,FTM_PSC_x32,70);
 289              		.loc 2 81 0
 290 00e6 4622     		movs	r2, #70
 291 00e8 0521     		movs	r1, #5
 292 00ea 42F20F70 		movw	r0, #9999
 293 00ee FFF7FEFF 		bl	PWM_Init
  82:../source/FTM.c **** }
 294              		.loc 2 82 0
 295 00f2 00BF     		nop
 296 00f4 0837     		adds	r7, r7, #8
 297              		.cfi_def_cfa_offset 8
 298 00f6 BD46     		mov	sp, r7
 299              		.cfi_def_cfa_register 13
 300              		@ sp needed
 301 00f8 80BD     		pop	{r7, pc}
 302              	.L14:
 303 00fa 00BF     		.align	2
 304              	.L13:
 305 00fc 00800340 		.word	1073971200
 306 0100 00700440 		.word	1074032640
 307 0104 00900340 		.word	1073975296
 308 0108 00A00340 		.word	1073979392
 309 010c 00900B40 		.word	1074499584
 310              		.cfi_endproc
 311              	.LFE125:
 313              		.section	.text.PWM_Init,"ax",%progbits
 314              		.align	1
 315              		.global	PWM_Init
 316              		.syntax unified
 317              		.thumb
 318              		.thumb_func
 319              		.fpu fpv4-sp-d16
 321              	PWM_Init:
 322              	.LFB126:
  83:../source/FTM.c **** 
  84:../source/FTM.c **** /// FTM PWM Example
  85:../source/FTM.c **** 
  86:../source/FTM.c **** // To Test Connect PC9(IC)-PC8(GPIO)
  87:../source/FTM.c **** // or PC9(IC)-PC1(OC)
  88:../source/FTM.c **** 
  89:../source/FTM.c **** void PWM_Init (uint16_t modulus, FTM_Prescal_t prescaler, uint16_t duty)
  90:../source/FTM.c **** {
 323              		.loc 2 90 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 8
 326              		@ frame_needed = 1, uses_anonymous_args = 0
 327 0000 80B5     		push	{r7, lr}
 328              		.cfi_def_cfa_offset 8
 329              		.cfi_offset 7, -8
 330              		.cfi_offset 14, -4
 331 0002 82B0     		sub	sp, sp, #8
 332              		.cfi_def_cfa_offset 16
 333 0004 00AF     		add	r7, sp, #0
 334              		.cfi_def_cfa_register 7
 335 0006 0346     		mov	r3, r0
 336 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 337 000a 0B46     		mov	r3, r1
 338 000c 7B71     		strb	r3, [r7, #5]
 339 000e 1346     		mov	r3, r2	@ movhi
 340 0010 7B80     		strh	r3, [r7, #2]	@ movhi
  91:../source/FTM.c **** 
  92:../source/FTM.c **** 	PWM_modulus=modulus;
 341              		.loc 2 92 0
 342 0012 254A     		ldr	r2, .L16
 343 0014 FB88     		ldrh	r3, [r7, #6]	@ movhi
 344 0016 1380     		strh	r3, [r2]	@ movhi
  93:../source/FTM.c **** 	PWM_duty=duty;
 345              		.loc 2 93 0
 346 0018 244A     		ldr	r2, .L16+4
 347 001a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 348 001c 1380     		strh	r3, [r2]	@ movhi
  94:../source/FTM.c **** 	//seteo los contadores
  95:../source/FTM.c **** 
  96:../source/FTM.c **** 	FTM0->CNTIN = 0X00;
 349              		.loc 2 96 0
 350 001e 244B     		ldr	r3, .L16+8
 351 0020 0022     		movs	r2, #0
 352 0022 DA64     		str	r2, [r3, #76]
  97:../source/FTM.c **** 	FTM0->MOD = FTM_MOD_MOD(PWM_modulus);
 353              		.loc 2 97 0
 354 0024 204B     		ldr	r3, .L16
 355 0026 1A88     		ldrh	r2, [r3]
 356 0028 214B     		ldr	r3, .L16+8
 357 002a 9A60     		str	r2, [r3, #8]
  98:../source/FTM.c **** 
  99:../source/FTM.c **** 	PORTC->PCR[PIN2NUM(PORTNUM2PIN(PC,1))]=0x00;
 358              		.loc 2 99 0
 359 002c 214B     		ldr	r3, .L16+12
 360 002e 0022     		movs	r2, #0
 361 0030 5A60     		str	r2, [r3, #4]
 100:../source/FTM.c **** 	PORTC->PCR[PIN2NUM(PORTNUM2PIN(PC,1))] |= PORT_PCR_DSE(1);
 362              		.loc 2 100 0
 363 0032 204B     		ldr	r3, .L16+12
 364 0034 5B68     		ldr	r3, [r3, #4]
 365 0036 1F4A     		ldr	r2, .L16+12
 366 0038 43F04003 		orr	r3, r3, #64
 367 003c 5360     		str	r3, [r2, #4]
 101:../source/FTM.c **** 	PORTC->PCR[PIN2NUM(PORTNUM2PIN(PC,1))] |= PORT_PCR_MUX(4);
 368              		.loc 2 101 0
 369 003e 1D4B     		ldr	r3, .L16+12
 370 0040 5B68     		ldr	r3, [r3, #4]
 371 0042 1C4A     		ldr	r2, .L16+12
 372 0044 43F48063 		orr	r3, r3, #1024
 373 0048 5360     		str	r3, [r2, #4]
 102:../source/FTM.c **** 	PORTC->PCR[PIN2NUM(PORTNUM2PIN(PC,1))] |= PORT_PCR_IRQC(0);
 374              		.loc 2 102 0
 375 004a 1A4B     		ldr	r3, .L16+12
 376 004c 194A     		ldr	r2, .L16+12
 377 004e 5B68     		ldr	r3, [r3, #4]
 378 0050 5360     		str	r3, [r2, #4]
 103:../source/FTM.c **** 
 104:../source/FTM.c **** 	//	PORT_Configure2 (PORTC,1,UserPCR);
 105:../source/FTM.c **** 
 106:../source/FTM.c **** 	FTM0->CNT = 0X00;
 379              		.loc 2 106 0
 380 0052 174B     		ldr	r3, .L16+8
 381 0054 0022     		movs	r2, #0
 382 0056 5A60     		str	r2, [r3, #4]
 107:../source/FTM.c **** 
 108:../source/FTM.c **** 
 109:../source/FTM.c **** 	FTM_SetPrescaler(FTM0, prescaler);
 383              		.loc 2 109 0
 384 0058 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 385 005a 1946     		mov	r1, r3
 386 005c 1448     		ldr	r0, .L16+8
 387 005e FFF7FEFF 		bl	FTM_SetPrescaler
 110:../source/FTM.c **** 	FTM_SetModulus(FTM0, PWM_modulus);
 388              		.loc 2 110 0
 389 0062 114B     		ldr	r3, .L16
 390 0064 1B88     		ldrh	r3, [r3]
 391 0066 1946     		mov	r1, r3
 392 0068 1148     		ldr	r0, .L16+8
 393 006a FFF7FEFF 		bl	FTM_SetModulus
 111:../source/FTM.c **** 	FTM_SetOverflowMode(FTM0, true);
 394              		.loc 2 111 0
 395 006e 0121     		movs	r1, #1
 396 0070 0F48     		ldr	r0, .L16+8
 397 0072 FFF7FEFF 		bl	FTM_SetOverflowMode
 112:../source/FTM.c **** 	FTM_SetWorkingMode(FTM0, 0, FTM_mPulseWidthModulation);			// MSA  / B
 398              		.loc 2 112 0
 399 0076 0222     		movs	r2, #2
 400 0078 0021     		movs	r1, #0
 401 007a 0D48     		ldr	r0, .L16+8
 402 007c FFF7FEFF 		bl	FTM_SetWorkingMode
 113:../source/FTM.c **** 	FTM_SetPulseWidthModulationLogic(FTM0, 0, FTM_lAssertedHigh);   // ELSA / B
 403              		.loc 2 113 0
 404 0080 0222     		movs	r2, #2
 405 0082 0021     		movs	r1, #0
 406 0084 0A48     		ldr	r0, .L16+8
 407 0086 FFF7FEFF 		bl	FTM_SetPulseWidthModulationLogic
 114:../source/FTM.c **** 	set_DutyPWM(FTM0, 0, PWM_duty);
 408              		.loc 2 114 0
 409 008a 084B     		ldr	r3, .L16+4
 410 008c 1B88     		ldrh	r3, [r3]
 411 008e 1A46     		mov	r2, r3
 412 0090 0021     		movs	r1, #0
 413 0092 0748     		ldr	r0, .L16+8
 414 0094 FFF7FEFF 		bl	set_DutyPWM
 115:../source/FTM.c **** 	//FTM_SetCounter(FTM0, 0, PWM_duty);
 116:../source/FTM.c **** 	FTM_StartClock(FTM0);
 415              		.loc 2 116 0
 416 0098 0548     		ldr	r0, .L16+8
 417 009a FFF7FEFF 		bl	FTM_StartClock
 117:../source/FTM.c **** }
 418              		.loc 2 117 0
 419 009e 00BF     		nop
 420 00a0 0837     		adds	r7, r7, #8
 421              		.cfi_def_cfa_offset 8
 422 00a2 BD46     		mov	sp, r7
 423              		.cfi_def_cfa_register 13
 424              		@ sp needed
 425 00a4 80BD     		pop	{r7, pc}
 426              	.L17:
 427 00a6 00BF     		.align	2
 428              	.L16:
 429 00a8 00000000 		.word	PWM_modulus
 430 00ac 00000000 		.word	PWM_duty
 431 00b0 00800340 		.word	1073971200
 432 00b4 00B00440 		.word	1074049024
 433              		.cfi_endproc
 434              	.LFE126:
 436              		.section	.text.FTM_SetPrescaler,"ax",%progbits
 437              		.align	1
 438              		.global	FTM_SetPrescaler
 439              		.syntax unified
 440              		.thumb
 441              		.thumb_func
 442              		.fpu fpv4-sp-d16
 444              	FTM_SetPrescaler:
 445              	.LFB127:
 118:../source/FTM.c **** 
 119:../source/FTM.c **** 
 120:../source/FTM.c **** 
 121:../source/FTM.c **** 
 122:../source/FTM.c **** // Setters
 123:../source/FTM.c **** 
 124:../source/FTM.c **** void FTM_SetPrescaler (FTM_t ftm, FTM_Prescal_t data)
 125:../source/FTM.c **** {
 446              		.loc 2 125 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 8
 449              		@ frame_needed = 1, uses_anonymous_args = 0
 450              		@ link register save eliminated.
 451 0000 80B4     		push	{r7}
 452              		.cfi_def_cfa_offset 4
 453              		.cfi_offset 7, -4
 454 0002 83B0     		sub	sp, sp, #12
 455              		.cfi_def_cfa_offset 16
 456 0004 00AF     		add	r7, sp, #0
 457              		.cfi_def_cfa_register 7
 458 0006 7860     		str	r0, [r7, #4]
 459 0008 0B46     		mov	r3, r1
 460 000a FB70     		strb	r3, [r7, #3]
 126:../source/FTM.c **** 	ftm->SC = (ftm->SC & ~FTM_SC_PS_MASK) | FTM_SC_PS(data);
 461              		.loc 2 126 0
 462 000c 7B68     		ldr	r3, [r7, #4]
 463 000e 1B68     		ldr	r3, [r3]
 464 0010 23F00702 		bic	r2, r3, #7
 465 0014 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 466 0016 03F00703 		and	r3, r3, #7
 467 001a 1A43     		orrs	r2, r2, r3
 468 001c 7B68     		ldr	r3, [r7, #4]
 469 001e 1A60     		str	r2, [r3]
 127:../source/FTM.c **** }
 470              		.loc 2 127 0
 471 0020 00BF     		nop
 472 0022 0C37     		adds	r7, r7, #12
 473              		.cfi_def_cfa_offset 4
 474 0024 BD46     		mov	sp, r7
 475              		.cfi_def_cfa_register 13
 476              		@ sp needed
 477 0026 5DF8047B 		ldr	r7, [sp], #4
 478              		.cfi_restore 7
 479              		.cfi_def_cfa_offset 0
 480 002a 7047     		bx	lr
 481              		.cfi_endproc
 482              	.LFE127:
 484              		.section	.text.FTM_SetModulus,"ax",%progbits
 485              		.align	1
 486              		.global	FTM_SetModulus
 487              		.syntax unified
 488              		.thumb
 489              		.thumb_func
 490              		.fpu fpv4-sp-d16
 492              	FTM_SetModulus:
 493              	.LFB128:
 128:../source/FTM.c **** 
 129:../source/FTM.c **** void FTM_SetModulus (FTM_t ftm, FTMData_t data)
 130:../source/FTM.c **** {
 494              		.loc 2 130 0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 8
 497              		@ frame_needed = 1, uses_anonymous_args = 0
 498              		@ link register save eliminated.
 499 0000 80B4     		push	{r7}
 500              		.cfi_def_cfa_offset 4
 501              		.cfi_offset 7, -4
 502 0002 83B0     		sub	sp, sp, #12
 503              		.cfi_def_cfa_offset 16
 504 0004 00AF     		add	r7, sp, #0
 505              		.cfi_def_cfa_register 7
 506 0006 7860     		str	r0, [r7, #4]
 507 0008 0B46     		mov	r3, r1
 508 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 131:../source/FTM.c **** 	ftm->CNTIN = 0X00;
 509              		.loc 2 131 0
 510 000c 7B68     		ldr	r3, [r7, #4]
 511 000e 0022     		movs	r2, #0
 512 0010 DA64     		str	r2, [r3, #76]
 132:../source/FTM.c **** 	ftm->CNT = 0X00;
 513              		.loc 2 132 0
 514 0012 7B68     		ldr	r3, [r7, #4]
 515 0014 0022     		movs	r2, #0
 516 0016 5A60     		str	r2, [r3, #4]
 133:../source/FTM.c **** 	ftm->MOD = FTM_MOD_MOD(data);
 517              		.loc 2 133 0
 518 0018 7A88     		ldrh	r2, [r7, #2]
 519 001a 7B68     		ldr	r3, [r7, #4]
 520 001c 9A60     		str	r2, [r3, #8]
 134:../source/FTM.c **** }
 521              		.loc 2 134 0
 522 001e 00BF     		nop
 523 0020 0C37     		adds	r7, r7, #12
 524              		.cfi_def_cfa_offset 4
 525 0022 BD46     		mov	sp, r7
 526              		.cfi_def_cfa_register 13
 527              		@ sp needed
 528 0024 5DF8047B 		ldr	r7, [sp], #4
 529              		.cfi_restore 7
 530              		.cfi_def_cfa_offset 0
 531 0028 7047     		bx	lr
 532              		.cfi_endproc
 533              	.LFE128:
 535              		.section	.text.FTM_GetModulus,"ax",%progbits
 536              		.align	1
 537              		.global	FTM_GetModulus
 538              		.syntax unified
 539              		.thumb
 540              		.thumb_func
 541              		.fpu fpv4-sp-d16
 543              	FTM_GetModulus:
 544              	.LFB129:
 135:../source/FTM.c **** 
 136:../source/FTM.c **** FTMData_t FTM_GetModulus (FTM_t ftm)
 137:../source/FTM.c **** {
 545              		.loc 2 137 0
 546              		.cfi_startproc
 547              		@ args = 0, pretend = 0, frame = 8
 548              		@ frame_needed = 1, uses_anonymous_args = 0
 549              		@ link register save eliminated.
 550 0000 80B4     		push	{r7}
 551              		.cfi_def_cfa_offset 4
 552              		.cfi_offset 7, -4
 553 0002 83B0     		sub	sp, sp, #12
 554              		.cfi_def_cfa_offset 16
 555 0004 00AF     		add	r7, sp, #0
 556              		.cfi_def_cfa_register 7
 557 0006 7860     		str	r0, [r7, #4]
 138:../source/FTM.c **** 	return ftm->MOD & FTM_MOD_MOD_MASK;
 558              		.loc 2 138 0
 559 0008 7B68     		ldr	r3, [r7, #4]
 560 000a 9B68     		ldr	r3, [r3, #8]
 561 000c 9BB2     		uxth	r3, r3
 139:../source/FTM.c **** }
 562              		.loc 2 139 0
 563 000e 1846     		mov	r0, r3
 564 0010 0C37     		adds	r7, r7, #12
 565              		.cfi_def_cfa_offset 4
 566 0012 BD46     		mov	sp, r7
 567              		.cfi_def_cfa_register 13
 568              		@ sp needed
 569 0014 5DF8047B 		ldr	r7, [sp], #4
 570              		.cfi_restore 7
 571              		.cfi_def_cfa_offset 0
 572 0018 7047     		bx	lr
 573              		.cfi_endproc
 574              	.LFE129:
 576              		.section	.text.FTM_StartClock,"ax",%progbits
 577              		.align	1
 578              		.global	FTM_StartClock
 579              		.syntax unified
 580              		.thumb
 581              		.thumb_func
 582              		.fpu fpv4-sp-d16
 584              	FTM_StartClock:
 585              	.LFB130:
 140:../source/FTM.c **** 
 141:../source/FTM.c **** void FTM_StartClock (FTM_t ftm)
 142:../source/FTM.c **** {
 586              		.loc 2 142 0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 8
 589              		@ frame_needed = 1, uses_anonymous_args = 0
 590              		@ link register save eliminated.
 591 0000 80B4     		push	{r7}
 592              		.cfi_def_cfa_offset 4
 593              		.cfi_offset 7, -4
 594 0002 83B0     		sub	sp, sp, #12
 595              		.cfi_def_cfa_offset 16
 596 0004 00AF     		add	r7, sp, #0
 597              		.cfi_def_cfa_register 7
 598 0006 7860     		str	r0, [r7, #4]
 143:../source/FTM.c **** 	ftm->SC |= FTM_SC_CLKS(0x01);
 599              		.loc 2 143 0
 600 0008 7B68     		ldr	r3, [r7, #4]
 601 000a 1B68     		ldr	r3, [r3]
 602 000c 43F00802 		orr	r2, r3, #8
 603 0010 7B68     		ldr	r3, [r7, #4]
 604 0012 1A60     		str	r2, [r3]
 144:../source/FTM.c **** }
 605              		.loc 2 144 0
 606 0014 00BF     		nop
 607 0016 0C37     		adds	r7, r7, #12
 608              		.cfi_def_cfa_offset 4
 609 0018 BD46     		mov	sp, r7
 610              		.cfi_def_cfa_register 13
 611              		@ sp needed
 612 001a 5DF8047B 		ldr	r7, [sp], #4
 613              		.cfi_restore 7
 614              		.cfi_def_cfa_offset 0
 615 001e 7047     		bx	lr
 616              		.cfi_endproc
 617              	.LFE130:
 619              		.section	.text.FTM_StopClock,"ax",%progbits
 620              		.align	1
 621              		.global	FTM_StopClock
 622              		.syntax unified
 623              		.thumb
 624              		.thumb_func
 625              		.fpu fpv4-sp-d16
 627              	FTM_StopClock:
 628              	.LFB131:
 145:../source/FTM.c **** 
 146:../source/FTM.c **** void FTM_StopClock (FTM_t ftm)
 147:../source/FTM.c **** {
 629              		.loc 2 147 0
 630              		.cfi_startproc
 631              		@ args = 0, pretend = 0, frame = 8
 632              		@ frame_needed = 1, uses_anonymous_args = 0
 633              		@ link register save eliminated.
 634 0000 80B4     		push	{r7}
 635              		.cfi_def_cfa_offset 4
 636              		.cfi_offset 7, -4
 637 0002 83B0     		sub	sp, sp, #12
 638              		.cfi_def_cfa_offset 16
 639 0004 00AF     		add	r7, sp, #0
 640              		.cfi_def_cfa_register 7
 641 0006 7860     		str	r0, [r7, #4]
 148:../source/FTM.c **** 	ftm->SC &= ~FTM_SC_CLKS(0x01);
 642              		.loc 2 148 0
 643 0008 7B68     		ldr	r3, [r7, #4]
 644 000a 1B68     		ldr	r3, [r3]
 645 000c 23F00802 		bic	r2, r3, #8
 646 0010 7B68     		ldr	r3, [r7, #4]
 647 0012 1A60     		str	r2, [r3]
 149:../source/FTM.c **** }
 648              		.loc 2 149 0
 649 0014 00BF     		nop
 650 0016 0C37     		adds	r7, r7, #12
 651              		.cfi_def_cfa_offset 4
 652 0018 BD46     		mov	sp, r7
 653              		.cfi_def_cfa_register 13
 654              		@ sp needed
 655 001a 5DF8047B 		ldr	r7, [sp], #4
 656              		.cfi_restore 7
 657              		.cfi_def_cfa_offset 0
 658 001e 7047     		bx	lr
 659              		.cfi_endproc
 660              	.LFE131:
 662              		.section	.text.FTM_SetOverflowMode,"ax",%progbits
 663              		.align	1
 664              		.global	FTM_SetOverflowMode
 665              		.syntax unified
 666              		.thumb
 667              		.thumb_func
 668              		.fpu fpv4-sp-d16
 670              	FTM_SetOverflowMode:
 671              	.LFB132:
 150:../source/FTM.c **** 
 151:../source/FTM.c **** void FTM_SetOverflowMode (FTM_t ftm, bool mode)
 152:../source/FTM.c **** {
 672              		.loc 2 152 0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 8
 675              		@ frame_needed = 1, uses_anonymous_args = 0
 676              		@ link register save eliminated.
 677 0000 80B4     		push	{r7}
 678              		.cfi_def_cfa_offset 4
 679              		.cfi_offset 7, -4
 680 0002 83B0     		sub	sp, sp, #12
 681              		.cfi_def_cfa_offset 16
 682 0004 00AF     		add	r7, sp, #0
 683              		.cfi_def_cfa_register 7
 684 0006 7860     		str	r0, [r7, #4]
 685 0008 0B46     		mov	r3, r1
 686 000a FB70     		strb	r3, [r7, #3]
 153:../source/FTM.c **** 	ftm->SC = (ftm->SC & ~FTM_SC_TOIE_MASK) | FTM_SC_TOIE(mode);
 687              		.loc 2 153 0
 688 000c 7B68     		ldr	r3, [r7, #4]
 689 000e 1B68     		ldr	r3, [r3]
 690 0010 23F04002 		bic	r2, r3, #64
 691 0014 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 692 0016 9B01     		lsls	r3, r3, #6
 693 0018 03F04003 		and	r3, r3, #64
 694 001c 1A43     		orrs	r2, r2, r3
 695 001e 7B68     		ldr	r3, [r7, #4]
 696 0020 1A60     		str	r2, [r3]
 154:../source/FTM.c **** }
 697              		.loc 2 154 0
 698 0022 00BF     		nop
 699 0024 0C37     		adds	r7, r7, #12
 700              		.cfi_def_cfa_offset 4
 701 0026 BD46     		mov	sp, r7
 702              		.cfi_def_cfa_register 13
 703              		@ sp needed
 704 0028 5DF8047B 		ldr	r7, [sp], #4
 705              		.cfi_restore 7
 706              		.cfi_def_cfa_offset 0
 707 002c 7047     		bx	lr
 708              		.cfi_endproc
 709              	.LFE132:
 711              		.section	.text.FTM_IsOverflowPending,"ax",%progbits
 712              		.align	1
 713              		.global	FTM_IsOverflowPending
 714              		.syntax unified
 715              		.thumb
 716              		.thumb_func
 717              		.fpu fpv4-sp-d16
 719              	FTM_IsOverflowPending:
 720              	.LFB133:
 155:../source/FTM.c **** 
 156:../source/FTM.c **** bool FTM_IsOverflowPending (FTM_t ftm)
 157:../source/FTM.c **** {
 721              		.loc 2 157 0
 722              		.cfi_startproc
 723              		@ args = 0, pretend = 0, frame = 8
 724              		@ frame_needed = 1, uses_anonymous_args = 0
 725              		@ link register save eliminated.
 726 0000 80B4     		push	{r7}
 727              		.cfi_def_cfa_offset 4
 728              		.cfi_offset 7, -4
 729 0002 83B0     		sub	sp, sp, #12
 730              		.cfi_def_cfa_offset 16
 731 0004 00AF     		add	r7, sp, #0
 732              		.cfi_def_cfa_register 7
 733 0006 7860     		str	r0, [r7, #4]
 158:../source/FTM.c **** 	return ftm->SC & FTM_SC_TOF_MASK;
 734              		.loc 2 158 0
 735 0008 7B68     		ldr	r3, [r7, #4]
 736 000a 1B68     		ldr	r3, [r3]
 737 000c 03F08003 		and	r3, r3, #128
 738 0010 002B     		cmp	r3, #0
 739 0012 14BF     		ite	ne
 740 0014 0123     		movne	r3, #1
 741 0016 0023     		moveq	r3, #0
 742 0018 DBB2     		uxtb	r3, r3
 159:../source/FTM.c **** }
 743              		.loc 2 159 0
 744 001a 1846     		mov	r0, r3
 745 001c 0C37     		adds	r7, r7, #12
 746              		.cfi_def_cfa_offset 4
 747 001e BD46     		mov	sp, r7
 748              		.cfi_def_cfa_register 13
 749              		@ sp needed
 750 0020 5DF8047B 		ldr	r7, [sp], #4
 751              		.cfi_restore 7
 752              		.cfi_def_cfa_offset 0
 753 0024 7047     		bx	lr
 754              		.cfi_endproc
 755              	.LFE133:
 757              		.section	.text.FTM_ClearOverflowFlag,"ax",%progbits
 758              		.align	1
 759              		.global	FTM_ClearOverflowFlag
 760              		.syntax unified
 761              		.thumb
 762              		.thumb_func
 763              		.fpu fpv4-sp-d16
 765              	FTM_ClearOverflowFlag:
 766              	.LFB134:
 160:../source/FTM.c **** 
 161:../source/FTM.c **** void FTM_ClearOverflowFlag (FTM_t ftm)
 162:../source/FTM.c **** {
 767              		.loc 2 162 0
 768              		.cfi_startproc
 769              		@ args = 0, pretend = 0, frame = 8
 770              		@ frame_needed = 1, uses_anonymous_args = 0
 771              		@ link register save eliminated.
 772 0000 80B4     		push	{r7}
 773              		.cfi_def_cfa_offset 4
 774              		.cfi_offset 7, -4
 775 0002 83B0     		sub	sp, sp, #12
 776              		.cfi_def_cfa_offset 16
 777 0004 00AF     		add	r7, sp, #0
 778              		.cfi_def_cfa_register 7
 779 0006 7860     		str	r0, [r7, #4]
 163:../source/FTM.c **** 	ftm->SC &= ~FTM_SC_TOF_MASK;
 780              		.loc 2 163 0
 781 0008 7B68     		ldr	r3, [r7, #4]
 782 000a 1B68     		ldr	r3, [r3]
 783 000c 23F08002 		bic	r2, r3, #128
 784 0010 7B68     		ldr	r3, [r7, #4]
 785 0012 1A60     		str	r2, [r3]
 164:../source/FTM.c **** }
 786              		.loc 2 164 0
 787 0014 00BF     		nop
 788 0016 0C37     		adds	r7, r7, #12
 789              		.cfi_def_cfa_offset 4
 790 0018 BD46     		mov	sp, r7
 791              		.cfi_def_cfa_register 13
 792              		@ sp needed
 793 001a 5DF8047B 		ldr	r7, [sp], #4
 794              		.cfi_restore 7
 795              		.cfi_def_cfa_offset 0
 796 001e 7047     		bx	lr
 797              		.cfi_endproc
 798              	.LFE134:
 800              		.section	.text.FTM_SetWorkingMode,"ax",%progbits
 801              		.align	1
 802              		.global	FTM_SetWorkingMode
 803              		.syntax unified
 804              		.thumb
 805              		.thumb_func
 806              		.fpu fpv4-sp-d16
 808              	FTM_SetWorkingMode:
 809              	.LFB135:
 165:../source/FTM.c **** 
 166:../source/FTM.c **** void FTM_SetWorkingMode (FTM_t ftm, FTMChannel_t channel, FTMMode_t mode)
 167:../source/FTM.c **** {
 810              		.loc 2 167 0
 811              		.cfi_startproc
 812              		@ args = 0, pretend = 0, frame = 16
 813              		@ frame_needed = 1, uses_anonymous_args = 0
 814              		@ link register save eliminated.
 815 0000 80B4     		push	{r7}
 816              		.cfi_def_cfa_offset 4
 817              		.cfi_offset 7, -4
 818 0002 85B0     		sub	sp, sp, #20
 819              		.cfi_def_cfa_offset 24
 820 0004 00AF     		add	r7, sp, #0
 821              		.cfi_def_cfa_register 7
 822 0006 F860     		str	r0, [r7, #12]
 823 0008 B960     		str	r1, [r7, #8]
 824 000a 1346     		mov	r3, r2
 825 000c FB71     		strb	r3, [r7, #7]
 168:../source/FTM.c **** 	ftm->CONTROLS[channel].CnSC = (ftm->CONTROLS[channel].CnSC & ~(FTM_CnSC_MSB_MASK | FTM_CnSC_MSA_MA
 826              		.loc 2 168 0
 827 000e FA68     		ldr	r2, [r7, #12]
 828 0010 BB68     		ldr	r3, [r7, #8]
 829 0012 0133     		adds	r3, r3, #1
 830 0014 DB00     		lsls	r3, r3, #3
 831 0016 1344     		add	r3, r3, r2
 832 0018 5B68     		ldr	r3, [r3, #4]
 833 001a 23F03002 		bic	r2, r3, #48
 169:../source/FTM.c **** 			                      (FTM_CnSC_MSB((mode >> 1) & 0X01) | FTM_CnSC_MSA((mode >> 0) & 0X01));
 834              		.loc 2 169 0
 835 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 836 0020 5B08     		lsrs	r3, r3, #1
 837 0022 DBB2     		uxtb	r3, r3
 838 0024 5B01     		lsls	r3, r3, #5
 839 0026 03F02001 		and	r1, r3, #32
 840 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 841 002c 1B01     		lsls	r3, r3, #4
 842 002e 03F01003 		and	r3, r3, #16
 843 0032 0B43     		orrs	r3, r3, r1
 168:../source/FTM.c **** 	ftm->CONTROLS[channel].CnSC = (ftm->CONTROLS[channel].CnSC & ~(FTM_CnSC_MSB_MASK | FTM_CnSC_MSA_MA
 844              		.loc 2 168 0
 845 0034 1A43     		orrs	r2, r2, r3
 846 0036 F968     		ldr	r1, [r7, #12]
 847 0038 BB68     		ldr	r3, [r7, #8]
 848 003a 0133     		adds	r3, r3, #1
 849 003c DB00     		lsls	r3, r3, #3
 850 003e 0B44     		add	r3, r3, r1
 851 0040 5A60     		str	r2, [r3, #4]
 170:../source/FTM.c **** }
 852              		.loc 2 170 0
 853 0042 00BF     		nop
 854 0044 1437     		adds	r7, r7, #20
 855              		.cfi_def_cfa_offset 4
 856 0046 BD46     		mov	sp, r7
 857              		.cfi_def_cfa_register 13
 858              		@ sp needed
 859 0048 5DF8047B 		ldr	r7, [sp], #4
 860              		.cfi_restore 7
 861              		.cfi_def_cfa_offset 0
 862 004c 7047     		bx	lr
 863              		.cfi_endproc
 864              	.LFE135:
 866              		.section	.text.FTM_GetWorkingMode,"ax",%progbits
 867              		.align	1
 868              		.global	FTM_GetWorkingMode
 869              		.syntax unified
 870              		.thumb
 871              		.thumb_func
 872              		.fpu fpv4-sp-d16
 874              	FTM_GetWorkingMode:
 875              	.LFB136:
 171:../source/FTM.c **** 
 172:../source/FTM.c **** FTMMode_t FTM_GetWorkingMode (FTM_t ftm, FTMChannel_t channel)
 173:../source/FTM.c **** {
 876              		.loc 2 173 0
 877              		.cfi_startproc
 878              		@ args = 0, pretend = 0, frame = 8
 879              		@ frame_needed = 1, uses_anonymous_args = 0
 880              		@ link register save eliminated.
 881 0000 80B4     		push	{r7}
 882              		.cfi_def_cfa_offset 4
 883              		.cfi_offset 7, -4
 884 0002 83B0     		sub	sp, sp, #12
 885              		.cfi_def_cfa_offset 16
 886 0004 00AF     		add	r7, sp, #0
 887              		.cfi_def_cfa_register 7
 888 0006 7860     		str	r0, [r7, #4]
 889 0008 3960     		str	r1, [r7]
 174:../source/FTM.c **** 	return (ftm->CONTROLS[channel].CnSC & (FTM_CnSC_MSB_MASK | FTM_CnSC_MSA_MASK)) >> FTM_CnSC_MSA_SHI
 890              		.loc 2 174 0
 891 000a 7A68     		ldr	r2, [r7, #4]
 892 000c 3B68     		ldr	r3, [r7]
 893 000e 0133     		adds	r3, r3, #1
 894 0010 DB00     		lsls	r3, r3, #3
 895 0012 1344     		add	r3, r3, r2
 896 0014 5B68     		ldr	r3, [r3, #4]
 897 0016 1B09     		lsrs	r3, r3, #4
 898 0018 DBB2     		uxtb	r3, r3
 899 001a 03F00303 		and	r3, r3, #3
 900 001e DBB2     		uxtb	r3, r3
 175:../source/FTM.c **** }
 901              		.loc 2 175 0
 902 0020 1846     		mov	r0, r3
 903 0022 0C37     		adds	r7, r7, #12
 904              		.cfi_def_cfa_offset 4
 905 0024 BD46     		mov	sp, r7
 906              		.cfi_def_cfa_register 13
 907              		@ sp needed
 908 0026 5DF8047B 		ldr	r7, [sp], #4
 909              		.cfi_restore 7
 910              		.cfi_def_cfa_offset 0
 911 002a 7047     		bx	lr
 912              		.cfi_endproc
 913              	.LFE136:
 915              		.section	.text.FTM_SetInputCaptureEdge,"ax",%progbits
 916              		.align	1
 917              		.global	FTM_SetInputCaptureEdge
 918              		.syntax unified
 919              		.thumb
 920              		.thumb_func
 921              		.fpu fpv4-sp-d16
 923              	FTM_SetInputCaptureEdge:
 924              	.LFB137:
 176:../source/FTM.c **** 
 177:../source/FTM.c **** void FTM_SetInputCaptureEdge (FTM_t ftm, FTMChannel_t channel, FTMEdge_t edge)
 178:../source/FTM.c **** {
 925              		.loc 2 178 0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 16
 928              		@ frame_needed = 1, uses_anonymous_args = 0
 929              		@ link register save eliminated.
 930 0000 80B4     		push	{r7}
 931              		.cfi_def_cfa_offset 4
 932              		.cfi_offset 7, -4
 933 0002 85B0     		sub	sp, sp, #20
 934              		.cfi_def_cfa_offset 24
 935 0004 00AF     		add	r7, sp, #0
 936              		.cfi_def_cfa_register 7
 937 0006 F860     		str	r0, [r7, #12]
 938 0008 B960     		str	r1, [r7, #8]
 939 000a 1346     		mov	r3, r2
 940 000c FB71     		strb	r3, [r7, #7]
 179:../source/FTM.c **** 	ftm->CONTROLS[channel].CnSC = (ftm->CONTROLS[channel].CnSC & ~(FTM_CnSC_ELSB_MASK | FTM_CnSC_ELSA_
 941              		.loc 2 179 0
 942 000e FA68     		ldr	r2, [r7, #12]
 943 0010 BB68     		ldr	r3, [r7, #8]
 944 0012 0133     		adds	r3, r3, #1
 945 0014 DB00     		lsls	r3, r3, #3
 946 0016 1344     		add	r3, r3, r2
 947 0018 5B68     		ldr	r3, [r3, #4]
 948 001a 23F00C02 		bic	r2, r3, #12
 180:../source/FTM.c **** 				                  (FTM_CnSC_ELSB((edge >> 1) & 0X01) | FTM_CnSC_ELSA((edge >> 0) & 0X01));
 949              		.loc 2 180 0
 950 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 951 0020 5B08     		lsrs	r3, r3, #1
 952 0022 DBB2     		uxtb	r3, r3
 953 0024 DB00     		lsls	r3, r3, #3
 954 0026 03F00801 		and	r1, r3, #8
 955 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 956 002c 9B00     		lsls	r3, r3, #2
 957 002e 03F00403 		and	r3, r3, #4
 958 0032 0B43     		orrs	r3, r3, r1
 179:../source/FTM.c **** 	ftm->CONTROLS[channel].CnSC = (ftm->CONTROLS[channel].CnSC & ~(FTM_CnSC_ELSB_MASK | FTM_CnSC_ELSA_
 959              		.loc 2 179 0
 960 0034 1A43     		orrs	r2, r2, r3
 961 0036 F968     		ldr	r1, [r7, #12]
 962 0038 BB68     		ldr	r3, [r7, #8]
 963 003a 0133     		adds	r3, r3, #1
 964 003c DB00     		lsls	r3, r3, #3
 965 003e 0B44     		add	r3, r3, r1
 966 0040 5A60     		str	r2, [r3, #4]
 181:../source/FTM.c **** }
 967              		.loc 2 181 0
 968 0042 00BF     		nop
 969 0044 1437     		adds	r7, r7, #20
 970              		.cfi_def_cfa_offset 4
 971 0046 BD46     		mov	sp, r7
 972              		.cfi_def_cfa_register 13
 973              		@ sp needed
 974 0048 5DF8047B 		ldr	r7, [sp], #4
 975              		.cfi_restore 7
 976              		.cfi_def_cfa_offset 0
 977 004c 7047     		bx	lr
 978              		.cfi_endproc
 979              	.LFE137:
 981              		.section	.text.FTM_GetInputCaptureEdge,"ax",%progbits
 982              		.align	1
 983              		.global	FTM_GetInputCaptureEdge
 984              		.syntax unified
 985              		.thumb
 986              		.thumb_func
 987              		.fpu fpv4-sp-d16
 989              	FTM_GetInputCaptureEdge:
 990              	.LFB138:
 182:../source/FTM.c **** 
 183:../source/FTM.c **** FTMEdge_t FTM_GetInputCaptureEdge (FTM_t ftm, FTMChannel_t channel)
 184:../source/FTM.c **** {
 991              		.loc 2 184 0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 8
 994              		@ frame_needed = 1, uses_anonymous_args = 0
 995              		@ link register save eliminated.
 996 0000 80B4     		push	{r7}
 997              		.cfi_def_cfa_offset 4
 998              		.cfi_offset 7, -4
 999 0002 83B0     		sub	sp, sp, #12
 1000              		.cfi_def_cfa_offset 16
 1001 0004 00AF     		add	r7, sp, #0
 1002              		.cfi_def_cfa_register 7
 1003 0006 7860     		str	r0, [r7, #4]
 1004 0008 3960     		str	r1, [r7]
 185:../source/FTM.c **** 	return (ftm->CONTROLS[channel].CnSC & (FTM_CnSC_ELSB_MASK | FTM_CnSC_ELSA_MASK)) >> FTM_CnSC_ELSA_
 1005              		.loc 2 185 0
 1006 000a 7A68     		ldr	r2, [r7, #4]
 1007 000c 3B68     		ldr	r3, [r7]
 1008 000e 0133     		adds	r3, r3, #1
 1009 0010 DB00     		lsls	r3, r3, #3
 1010 0012 1344     		add	r3, r3, r2
 1011 0014 5B68     		ldr	r3, [r3, #4]
 1012 0016 9B08     		lsrs	r3, r3, #2
 1013 0018 DBB2     		uxtb	r3, r3
 1014 001a 03F00303 		and	r3, r3, #3
 1015 001e DBB2     		uxtb	r3, r3
 186:../source/FTM.c **** }
 1016              		.loc 2 186 0
 1017 0020 1846     		mov	r0, r3
 1018 0022 0C37     		adds	r7, r7, #12
 1019              		.cfi_def_cfa_offset 4
 1020 0024 BD46     		mov	sp, r7
 1021              		.cfi_def_cfa_register 13
 1022              		@ sp needed
 1023 0026 5DF8047B 		ldr	r7, [sp], #4
 1024              		.cfi_restore 7
 1025              		.cfi_def_cfa_offset 0
 1026 002a 7047     		bx	lr
 1027              		.cfi_endproc
 1028              	.LFE138:
 1030              		.section	.text.FTM_SetOutputCompareEffect,"ax",%progbits
 1031              		.align	1
 1032              		.global	FTM_SetOutputCompareEffect
 1033              		.syntax unified
 1034              		.thumb
 1035              		.thumb_func
 1036              		.fpu fpv4-sp-d16
 1038              	FTM_SetOutputCompareEffect:
 1039              	.LFB139:
 187:../source/FTM.c **** 
 188:../source/FTM.c **** void FTM_SetOutputCompareEffect (FTM_t ftm, FTMChannel_t channel, FTMEffect_t effect)
 189:../source/FTM.c **** {
 1040              		.loc 2 189 0
 1041              		.cfi_startproc
 1042              		@ args = 0, pretend = 0, frame = 16
 1043              		@ frame_needed = 1, uses_anonymous_args = 0
 1044              		@ link register save eliminated.
 1045 0000 80B4     		push	{r7}
 1046              		.cfi_def_cfa_offset 4
 1047              		.cfi_offset 7, -4
 1048 0002 85B0     		sub	sp, sp, #20
 1049              		.cfi_def_cfa_offset 24
 1050 0004 00AF     		add	r7, sp, #0
 1051              		.cfi_def_cfa_register 7
 1052 0006 F860     		str	r0, [r7, #12]
 1053 0008 B960     		str	r1, [r7, #8]
 1054 000a 1346     		mov	r3, r2
 1055 000c FB71     		strb	r3, [r7, #7]
 190:../source/FTM.c **** 	ftm->CONTROLS[channel].CnSC = (ftm->CONTROLS[channel].CnSC & ~(FTM_CnSC_ELSB_MASK | FTM_CnSC_ELSA_
 1056              		.loc 2 190 0
 1057 000e FA68     		ldr	r2, [r7, #12]
 1058 0010 BB68     		ldr	r3, [r7, #8]
 1059 0012 0133     		adds	r3, r3, #1
 1060 0014 DB00     		lsls	r3, r3, #3
 1061 0016 1344     		add	r3, r3, r2
 1062 0018 5B68     		ldr	r3, [r3, #4]
 1063 001a 23F00C02 		bic	r2, r3, #12
 191:../source/FTM.c **** 				                  (FTM_CnSC_ELSB((effect >> 1) & 0X01) | FTM_CnSC_ELSA((effect >> 0) & 0X01));
 1064              		.loc 2 191 0
 1065 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1066 0020 5B08     		lsrs	r3, r3, #1
 1067 0022 DBB2     		uxtb	r3, r3
 1068 0024 DB00     		lsls	r3, r3, #3
 1069 0026 03F00801 		and	r1, r3, #8
 1070 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1071 002c 9B00     		lsls	r3, r3, #2
 1072 002e 03F00403 		and	r3, r3, #4
 1073 0032 0B43     		orrs	r3, r3, r1
 190:../source/FTM.c **** 	ftm->CONTROLS[channel].CnSC = (ftm->CONTROLS[channel].CnSC & ~(FTM_CnSC_ELSB_MASK | FTM_CnSC_ELSA_
 1074              		.loc 2 190 0
 1075 0034 1A43     		orrs	r2, r2, r3
 1076 0036 F968     		ldr	r1, [r7, #12]
 1077 0038 BB68     		ldr	r3, [r7, #8]
 1078 003a 0133     		adds	r3, r3, #1
 1079 003c DB00     		lsls	r3, r3, #3
 1080 003e 0B44     		add	r3, r3, r1
 1081 0040 5A60     		str	r2, [r3, #4]
 192:../source/FTM.c **** }
 1082              		.loc 2 192 0
 1083 0042 00BF     		nop
 1084 0044 1437     		adds	r7, r7, #20
 1085              		.cfi_def_cfa_offset 4
 1086 0046 BD46     		mov	sp, r7
 1087              		.cfi_def_cfa_register 13
 1088              		@ sp needed
 1089 0048 5DF8047B 		ldr	r7, [sp], #4
 1090              		.cfi_restore 7
 1091              		.cfi_def_cfa_offset 0
 1092 004c 7047     		bx	lr
 1093              		.cfi_endproc
 1094              	.LFE139:
 1096              		.section	.text.FTM_GetOutputCompareEffect,"ax",%progbits
 1097              		.align	1
 1098              		.global	FTM_GetOutputCompareEffect
 1099              		.syntax unified
 1100              		.thumb
 1101              		.thumb_func
 1102              		.fpu fpv4-sp-d16
 1104              	FTM_GetOutputCompareEffect:
 1105              	.LFB140:
 193:../source/FTM.c **** 
 194:../source/FTM.c **** FTMEffect_t FTM_GetOutputCompareEffect (FTM_t ftm, FTMChannel_t channel)
 195:../source/FTM.c **** {
 1106              		.loc 2 195 0
 1107              		.cfi_startproc
 1108              		@ args = 0, pretend = 0, frame = 8
 1109              		@ frame_needed = 1, uses_anonymous_args = 0
 1110              		@ link register save eliminated.
 1111 0000 80B4     		push	{r7}
 1112              		.cfi_def_cfa_offset 4
 1113              		.cfi_offset 7, -4
 1114 0002 83B0     		sub	sp, sp, #12
 1115              		.cfi_def_cfa_offset 16
 1116 0004 00AF     		add	r7, sp, #0
 1117              		.cfi_def_cfa_register 7
 1118 0006 7860     		str	r0, [r7, #4]
 1119 0008 3960     		str	r1, [r7]
 196:../source/FTM.c **** 	return (ftm->CONTROLS[channel].CnSC & (FTM_CnSC_ELSB_MASK | FTM_CnSC_ELSA_MASK)) >> FTM_CnSC_ELSA_
 1120              		.loc 2 196 0
 1121 000a 7A68     		ldr	r2, [r7, #4]
 1122 000c 3B68     		ldr	r3, [r7]
 1123 000e 0133     		adds	r3, r3, #1
 1124 0010 DB00     		lsls	r3, r3, #3
 1125 0012 1344     		add	r3, r3, r2
 1126 0014 5B68     		ldr	r3, [r3, #4]
 1127 0016 9B08     		lsrs	r3, r3, #2
 1128 0018 DBB2     		uxtb	r3, r3
 1129 001a 03F00303 		and	r3, r3, #3
 1130 001e DBB2     		uxtb	r3, r3
 197:../source/FTM.c **** }
 1131              		.loc 2 197 0
 1132 0020 1846     		mov	r0, r3
 1133 0022 0C37     		adds	r7, r7, #12
 1134              		.cfi_def_cfa_offset 4
 1135 0024 BD46     		mov	sp, r7
 1136              		.cfi_def_cfa_register 13
 1137              		@ sp needed
 1138 0026 5DF8047B 		ldr	r7, [sp], #4
 1139              		.cfi_restore 7
 1140              		.cfi_def_cfa_offset 0
 1141 002a 7047     		bx	lr
 1142              		.cfi_endproc
 1143              	.LFE140:
 1145              		.section	.text.FTM_SetPulseWidthModulationLogic,"ax",%progbits
 1146              		.align	1
 1147              		.global	FTM_SetPulseWidthModulationLogic
 1148              		.syntax unified
 1149              		.thumb
 1150              		.thumb_func
 1151              		.fpu fpv4-sp-d16
 1153              	FTM_SetPulseWidthModulationLogic:
 1154              	.LFB141:
 198:../source/FTM.c **** 
 199:../source/FTM.c **** void FTM_SetPulseWidthModulationLogic (FTM_t ftm, FTMChannel_t channel, FTMLogic_t logic)
 200:../source/FTM.c **** {
 1155              		.loc 2 200 0
 1156              		.cfi_startproc
 1157              		@ args = 0, pretend = 0, frame = 16
 1158              		@ frame_needed = 1, uses_anonymous_args = 0
 1159              		@ link register save eliminated.
 1160 0000 80B4     		push	{r7}
 1161              		.cfi_def_cfa_offset 4
 1162              		.cfi_offset 7, -4
 1163 0002 85B0     		sub	sp, sp, #20
 1164              		.cfi_def_cfa_offset 24
 1165 0004 00AF     		add	r7, sp, #0
 1166              		.cfi_def_cfa_register 7
 1167 0006 F860     		str	r0, [r7, #12]
 1168 0008 B960     		str	r1, [r7, #8]
 1169 000a 1346     		mov	r3, r2
 1170 000c FB71     		strb	r3, [r7, #7]
 201:../source/FTM.c **** 	ftm->CONTROLS[channel].CnSC = (ftm->CONTROLS[channel].CnSC & ~(FTM_CnSC_ELSB_MASK | FTM_CnSC_ELSA_
 1171              		.loc 2 201 0
 1172 000e FA68     		ldr	r2, [r7, #12]
 1173 0010 BB68     		ldr	r3, [r7, #8]
 1174 0012 0133     		adds	r3, r3, #1
 1175 0014 DB00     		lsls	r3, r3, #3
 1176 0016 1344     		add	r3, r3, r2
 1177 0018 5B68     		ldr	r3, [r3, #4]
 1178 001a 23F00C02 		bic	r2, r3, #12
 202:../source/FTM.c **** 				                  (FTM_CnSC_ELSB((logic >> 1) & 0X01) | FTM_CnSC_ELSA((logic >> 0) & 0X01));
 1179              		.loc 2 202 0
 1180 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1181 0020 5B08     		lsrs	r3, r3, #1
 1182 0022 DBB2     		uxtb	r3, r3
 1183 0024 DB00     		lsls	r3, r3, #3
 1184 0026 03F00801 		and	r1, r3, #8
 1185 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1186 002c 9B00     		lsls	r3, r3, #2
 1187 002e 03F00403 		and	r3, r3, #4
 1188 0032 0B43     		orrs	r3, r3, r1
 201:../source/FTM.c **** 	ftm->CONTROLS[channel].CnSC = (ftm->CONTROLS[channel].CnSC & ~(FTM_CnSC_ELSB_MASK | FTM_CnSC_ELSA_
 1189              		.loc 2 201 0
 1190 0034 1A43     		orrs	r2, r2, r3
 1191 0036 F968     		ldr	r1, [r7, #12]
 1192 0038 BB68     		ldr	r3, [r7, #8]
 1193 003a 0133     		adds	r3, r3, #1
 1194 003c DB00     		lsls	r3, r3, #3
 1195 003e 0B44     		add	r3, r3, r1
 1196 0040 5A60     		str	r2, [r3, #4]
 203:../source/FTM.c **** }
 1197              		.loc 2 203 0
 1198 0042 00BF     		nop
 1199 0044 1437     		adds	r7, r7, #20
 1200              		.cfi_def_cfa_offset 4
 1201 0046 BD46     		mov	sp, r7
 1202              		.cfi_def_cfa_register 13
 1203              		@ sp needed
 1204 0048 5DF8047B 		ldr	r7, [sp], #4
 1205              		.cfi_restore 7
 1206              		.cfi_def_cfa_offset 0
 1207 004c 7047     		bx	lr
 1208              		.cfi_endproc
 1209              	.LFE141:
 1211              		.section	.text.FTM_GetPulseWidthModulationLogic,"ax",%progbits
 1212              		.align	1
 1213              		.global	FTM_GetPulseWidthModulationLogic
 1214              		.syntax unified
 1215              		.thumb
 1216              		.thumb_func
 1217              		.fpu fpv4-sp-d16
 1219              	FTM_GetPulseWidthModulationLogic:
 1220              	.LFB142:
 204:../source/FTM.c **** 
 205:../source/FTM.c **** FTMLogic_t FTM_GetPulseWidthModulationLogic (FTM_t ftm, FTMChannel_t channel)
 206:../source/FTM.c **** {
 1221              		.loc 2 206 0
 1222              		.cfi_startproc
 1223              		@ args = 0, pretend = 0, frame = 8
 1224              		@ frame_needed = 1, uses_anonymous_args = 0
 1225              		@ link register save eliminated.
 1226 0000 80B4     		push	{r7}
 1227              		.cfi_def_cfa_offset 4
 1228              		.cfi_offset 7, -4
 1229 0002 83B0     		sub	sp, sp, #12
 1230              		.cfi_def_cfa_offset 16
 1231 0004 00AF     		add	r7, sp, #0
 1232              		.cfi_def_cfa_register 7
 1233 0006 7860     		str	r0, [r7, #4]
 1234 0008 3960     		str	r1, [r7]
 207:../source/FTM.c **** 	return (ftm->CONTROLS[channel].CnSC & (FTM_CnSC_ELSB_MASK | FTM_CnSC_ELSA_MASK)) >> FTM_CnSC_ELSA_
 1235              		.loc 2 207 0
 1236 000a 7A68     		ldr	r2, [r7, #4]
 1237 000c 3B68     		ldr	r3, [r7]
 1238 000e 0133     		adds	r3, r3, #1
 1239 0010 DB00     		lsls	r3, r3, #3
 1240 0012 1344     		add	r3, r3, r2
 1241 0014 5B68     		ldr	r3, [r3, #4]
 1242 0016 9B08     		lsrs	r3, r3, #2
 1243 0018 DBB2     		uxtb	r3, r3
 1244 001a 03F00303 		and	r3, r3, #3
 1245 001e DBB2     		uxtb	r3, r3
 208:../source/FTM.c **** }
 1246              		.loc 2 208 0
 1247 0020 1846     		mov	r0, r3
 1248 0022 0C37     		adds	r7, r7, #12
 1249              		.cfi_def_cfa_offset 4
 1250 0024 BD46     		mov	sp, r7
 1251              		.cfi_def_cfa_register 13
 1252              		@ sp needed
 1253 0026 5DF8047B 		ldr	r7, [sp], #4
 1254              		.cfi_restore 7
 1255              		.cfi_def_cfa_offset 0
 1256 002a 7047     		bx	lr
 1257              		.cfi_endproc
 1258              	.LFE142:
 1260              		.section	.text.FTM_SetCounter,"ax",%progbits
 1261              		.align	1
 1262              		.global	FTM_SetCounter
 1263              		.syntax unified
 1264              		.thumb
 1265              		.thumb_func
 1266              		.fpu fpv4-sp-d16
 1268              	FTM_SetCounter:
 1269              	.LFB143:
 209:../source/FTM.c **** 
 210:../source/FTM.c **** void FTM_SetCounter (FTM_t ftm, FTMChannel_t channel, FTMData_t data)
 211:../source/FTM.c **** {
 1270              		.loc 2 211 0
 1271              		.cfi_startproc
 1272              		@ args = 0, pretend = 0, frame = 16
 1273              		@ frame_needed = 1, uses_anonymous_args = 0
 1274              		@ link register save eliminated.
 1275 0000 80B4     		push	{r7}
 1276              		.cfi_def_cfa_offset 4
 1277              		.cfi_offset 7, -4
 1278 0002 85B0     		sub	sp, sp, #20
 1279              		.cfi_def_cfa_offset 24
 1280 0004 00AF     		add	r7, sp, #0
 1281              		.cfi_def_cfa_register 7
 1282 0006 F860     		str	r0, [r7, #12]
 1283 0008 B960     		str	r1, [r7, #8]
 1284 000a 1346     		mov	r3, r2
 1285 000c FB80     		strh	r3, [r7, #6]	@ movhi
 212:../source/FTM.c **** 	ftm->CONTROLS[channel].CnV = FTM_CnV_VAL(data);
 1286              		.loc 2 212 0
 1287 000e FA88     		ldrh	r2, [r7, #6]
 1288 0010 F968     		ldr	r1, [r7, #12]
 1289 0012 BB68     		ldr	r3, [r7, #8]
 1290 0014 0133     		adds	r3, r3, #1
 1291 0016 DB00     		lsls	r3, r3, #3
 1292 0018 0B44     		add	r3, r3, r1
 1293 001a 9A60     		str	r2, [r3, #8]
 213:../source/FTM.c **** }
 1294              		.loc 2 213 0
 1295 001c 00BF     		nop
 1296 001e 1437     		adds	r7, r7, #20
 1297              		.cfi_def_cfa_offset 4
 1298 0020 BD46     		mov	sp, r7
 1299              		.cfi_def_cfa_register 13
 1300              		@ sp needed
 1301 0022 5DF8047B 		ldr	r7, [sp], #4
 1302              		.cfi_restore 7
 1303              		.cfi_def_cfa_offset 0
 1304 0026 7047     		bx	lr
 1305              		.cfi_endproc
 1306              	.LFE143:
 1308              		.section	.text.FTM_GetCounter,"ax",%progbits
 1309              		.align	1
 1310              		.global	FTM_GetCounter
 1311              		.syntax unified
 1312              		.thumb
 1313              		.thumb_func
 1314              		.fpu fpv4-sp-d16
 1316              	FTM_GetCounter:
 1317              	.LFB144:
 214:../source/FTM.c **** 
 215:../source/FTM.c **** FTMData_t FTM_GetCounter (FTM_t ftm, FTMChannel_t channel)
 216:../source/FTM.c **** {
 1318              		.loc 2 216 0
 1319              		.cfi_startproc
 1320              		@ args = 0, pretend = 0, frame = 8
 1321              		@ frame_needed = 1, uses_anonymous_args = 0
 1322              		@ link register save eliminated.
 1323 0000 80B4     		push	{r7}
 1324              		.cfi_def_cfa_offset 4
 1325              		.cfi_offset 7, -4
 1326 0002 83B0     		sub	sp, sp, #12
 1327              		.cfi_def_cfa_offset 16
 1328 0004 00AF     		add	r7, sp, #0
 1329              		.cfi_def_cfa_register 7
 1330 0006 7860     		str	r0, [r7, #4]
 1331 0008 3960     		str	r1, [r7]
 217:../source/FTM.c **** 	return ftm->CONTROLS[channel].CnV & FTM_CnV_VAL_MASK;
 1332              		.loc 2 217 0
 1333 000a 7A68     		ldr	r2, [r7, #4]
 1334 000c 3B68     		ldr	r3, [r7]
 1335 000e 0133     		adds	r3, r3, #1
 1336 0010 DB00     		lsls	r3, r3, #3
 1337 0012 1344     		add	r3, r3, r2
 1338 0014 9B68     		ldr	r3, [r3, #8]
 1339 0016 9BB2     		uxth	r3, r3
 218:../source/FTM.c **** }
 1340              		.loc 2 218 0
 1341 0018 1846     		mov	r0, r3
 1342 001a 0C37     		adds	r7, r7, #12
 1343              		.cfi_def_cfa_offset 4
 1344 001c BD46     		mov	sp, r7
 1345              		.cfi_def_cfa_register 13
 1346              		@ sp needed
 1347 001e 5DF8047B 		ldr	r7, [sp], #4
 1348              		.cfi_restore 7
 1349              		.cfi_def_cfa_offset 0
 1350 0022 7047     		bx	lr
 1351              		.cfi_endproc
 1352              	.LFE144:
 1354              		.section	.text.FTM_SetInterruptMode,"ax",%progbits
 1355              		.align	1
 1356              		.global	FTM_SetInterruptMode
 1357              		.syntax unified
 1358              		.thumb
 1359              		.thumb_func
 1360              		.fpu fpv4-sp-d16
 1362              	FTM_SetInterruptMode:
 1363              	.LFB145:
 219:../source/FTM.c **** 
 220:../source/FTM.c **** void FTM_SetInterruptMode (FTM_t ftm, FTMChannel_t channel, bool mode)
 221:../source/FTM.c **** {
 1364              		.loc 2 221 0
 1365              		.cfi_startproc
 1366              		@ args = 0, pretend = 0, frame = 16
 1367              		@ frame_needed = 1, uses_anonymous_args = 0
 1368              		@ link register save eliminated.
 1369 0000 80B4     		push	{r7}
 1370              		.cfi_def_cfa_offset 4
 1371              		.cfi_offset 7, -4
 1372 0002 85B0     		sub	sp, sp, #20
 1373              		.cfi_def_cfa_offset 24
 1374 0004 00AF     		add	r7, sp, #0
 1375              		.cfi_def_cfa_register 7
 1376 0006 F860     		str	r0, [r7, #12]
 1377 0008 B960     		str	r1, [r7, #8]
 1378 000a 1346     		mov	r3, r2
 1379 000c FB71     		strb	r3, [r7, #7]
 222:../source/FTM.c **** 	ftm->CONTROLS[channel].CnSC = (ftm->CONTROLS[channel].CnSC & ~FTM_CnSC_CHIE_MASK) | FTM_CnSC_CHIE(
 1380              		.loc 2 222 0
 1381 000e FA68     		ldr	r2, [r7, #12]
 1382 0010 BB68     		ldr	r3, [r7, #8]
 1383 0012 0133     		adds	r3, r3, #1
 1384 0014 DB00     		lsls	r3, r3, #3
 1385 0016 1344     		add	r3, r3, r2
 1386 0018 5B68     		ldr	r3, [r3, #4]
 1387 001a 23F04002 		bic	r2, r3, #64
 1388 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1389 0020 9B01     		lsls	r3, r3, #6
 1390 0022 03F04003 		and	r3, r3, #64
 1391 0026 1A43     		orrs	r2, r2, r3
 1392 0028 F968     		ldr	r1, [r7, #12]
 1393 002a BB68     		ldr	r3, [r7, #8]
 1394 002c 0133     		adds	r3, r3, #1
 1395 002e DB00     		lsls	r3, r3, #3
 1396 0030 0B44     		add	r3, r3, r1
 1397 0032 5A60     		str	r2, [r3, #4]
 223:../source/FTM.c **** }
 1398              		.loc 2 223 0
 1399 0034 00BF     		nop
 1400 0036 1437     		adds	r7, r7, #20
 1401              		.cfi_def_cfa_offset 4
 1402 0038 BD46     		mov	sp, r7
 1403              		.cfi_def_cfa_register 13
 1404              		@ sp needed
 1405 003a 5DF8047B 		ldr	r7, [sp], #4
 1406              		.cfi_restore 7
 1407              		.cfi_def_cfa_offset 0
 1408 003e 7047     		bx	lr
 1409              		.cfi_endproc
 1410              	.LFE145:
 1412              		.section	.text.FTM_IsInterruptPending,"ax",%progbits
 1413              		.align	1
 1414              		.global	FTM_IsInterruptPending
 1415              		.syntax unified
 1416              		.thumb
 1417              		.thumb_func
 1418              		.fpu fpv4-sp-d16
 1420              	FTM_IsInterruptPending:
 1421              	.LFB146:
 224:../source/FTM.c **** 
 225:../source/FTM.c **** bool FTM_IsInterruptPending (FTM_t ftm, FTMChannel_t channel)
 226:../source/FTM.c **** {
 1422              		.loc 2 226 0
 1423              		.cfi_startproc
 1424              		@ args = 0, pretend = 0, frame = 8
 1425              		@ frame_needed = 1, uses_anonymous_args = 0
 1426              		@ link register save eliminated.
 1427 0000 80B4     		push	{r7}
 1428              		.cfi_def_cfa_offset 4
 1429              		.cfi_offset 7, -4
 1430 0002 83B0     		sub	sp, sp, #12
 1431              		.cfi_def_cfa_offset 16
 1432 0004 00AF     		add	r7, sp, #0
 1433              		.cfi_def_cfa_register 7
 1434 0006 7860     		str	r0, [r7, #4]
 1435 0008 3960     		str	r1, [r7]
 227:../source/FTM.c **** 	return ftm->CONTROLS[channel].CnSC & FTM_CnSC_CHF_MASK;
 1436              		.loc 2 227 0
 1437 000a 7A68     		ldr	r2, [r7, #4]
 1438 000c 3B68     		ldr	r3, [r7]
 1439 000e 0133     		adds	r3, r3, #1
 1440 0010 DB00     		lsls	r3, r3, #3
 1441 0012 1344     		add	r3, r3, r2
 1442 0014 5B68     		ldr	r3, [r3, #4]
 1443 0016 03F08003 		and	r3, r3, #128
 1444 001a 002B     		cmp	r3, #0
 1445 001c 14BF     		ite	ne
 1446 001e 0123     		movne	r3, #1
 1447 0020 0023     		moveq	r3, #0
 1448 0022 DBB2     		uxtb	r3, r3
 228:../source/FTM.c **** }
 1449              		.loc 2 228 0
 1450 0024 1846     		mov	r0, r3
 1451 0026 0C37     		adds	r7, r7, #12
 1452              		.cfi_def_cfa_offset 4
 1453 0028 BD46     		mov	sp, r7
 1454              		.cfi_def_cfa_register 13
 1455              		@ sp needed
 1456 002a 5DF8047B 		ldr	r7, [sp], #4
 1457              		.cfi_restore 7
 1458              		.cfi_def_cfa_offset 0
 1459 002e 7047     		bx	lr
 1460              		.cfi_endproc
 1461              	.LFE146:
 1463              		.section	.text.FTM_ClearInterruptFlag,"ax",%progbits
 1464              		.align	1
 1465              		.global	FTM_ClearInterruptFlag
 1466              		.syntax unified
 1467              		.thumb
 1468              		.thumb_func
 1469              		.fpu fpv4-sp-d16
 1471              	FTM_ClearInterruptFlag:
 1472              	.LFB147:
 229:../source/FTM.c **** 
 230:../source/FTM.c **** void FTM_ClearInterruptFlag (FTM_t ftm, FTMChannel_t channel)
 231:../source/FTM.c **** {
 1473              		.loc 2 231 0
 1474              		.cfi_startproc
 1475              		@ args = 0, pretend = 0, frame = 8
 1476              		@ frame_needed = 1, uses_anonymous_args = 0
 1477              		@ link register save eliminated.
 1478 0000 80B4     		push	{r7}
 1479              		.cfi_def_cfa_offset 4
 1480              		.cfi_offset 7, -4
 1481 0002 83B0     		sub	sp, sp, #12
 1482              		.cfi_def_cfa_offset 16
 1483 0004 00AF     		add	r7, sp, #0
 1484              		.cfi_def_cfa_register 7
 1485 0006 7860     		str	r0, [r7, #4]
 1486 0008 3960     		str	r1, [r7]
 232:../source/FTM.c **** 	ftm->CONTROLS[channel].CnSC &= ~FTM_CnSC_CHF_MASK;
 1487              		.loc 2 232 0
 1488 000a 7A68     		ldr	r2, [r7, #4]
 1489 000c 3B68     		ldr	r3, [r7]
 1490 000e 0133     		adds	r3, r3, #1
 1491 0010 DB00     		lsls	r3, r3, #3
 1492 0012 1344     		add	r3, r3, r2
 1493 0014 5B68     		ldr	r3, [r3, #4]
 1494 0016 23F08002 		bic	r2, r3, #128
 1495 001a 7968     		ldr	r1, [r7, #4]
 1496 001c 3B68     		ldr	r3, [r7]
 1497 001e 0133     		adds	r3, r3, #1
 1498 0020 DB00     		lsls	r3, r3, #3
 1499 0022 0B44     		add	r3, r3, r1
 1500 0024 5A60     		str	r2, [r3, #4]
 233:../source/FTM.c **** }
 1501              		.loc 2 233 0
 1502 0026 00BF     		nop
 1503 0028 0C37     		adds	r7, r7, #12
 1504              		.cfi_def_cfa_offset 4
 1505 002a BD46     		mov	sp, r7
 1506              		.cfi_def_cfa_register 13
 1507              		@ sp needed
 1508 002c 5DF8047B 		ldr	r7, [sp], #4
 1509              		.cfi_restore 7
 1510              		.cfi_def_cfa_offset 0
 1511 0030 7047     		bx	lr
 1512              		.cfi_endproc
 1513              	.LFE147:
 1515              		.section	.text.set_DutyPWM,"ax",%progbits
 1516              		.align	1
 1517              		.global	set_DutyPWM
 1518              		.syntax unified
 1519              		.thumb
 1520              		.thumb_func
 1521              		.fpu fpv4-sp-d16
 1523              	set_DutyPWM:
 1524              	.LFB148:
 234:../source/FTM.c **** 
 235:../source/FTM.c **** void set_DutyPWM(FTM_t ftm,FTMChannel_t Chn, uint16_t  percent)
 236:../source/FTM.c **** {
 1525              		.loc 2 236 0
 1526              		.cfi_startproc
 1527              		@ args = 0, pretend = 0, frame = 16
 1528              		@ frame_needed = 1, uses_anonymous_args = 0
 1529 0000 80B5     		push	{r7, lr}
 1530              		.cfi_def_cfa_offset 8
 1531              		.cfi_offset 7, -8
 1532              		.cfi_offset 14, -4
 1533 0002 84B0     		sub	sp, sp, #16
 1534              		.cfi_def_cfa_offset 24
 1535 0004 00AF     		add	r7, sp, #0
 1536              		.cfi_def_cfa_register 7
 1537 0006 F860     		str	r0, [r7, #12]
 1538 0008 B960     		str	r1, [r7, #8]
 1539 000a 1346     		mov	r3, r2
 1540 000c FB80     		strh	r3, [r7, #6]	@ movhi
 237:../source/FTM.c **** 	//double duty_per=(percent/100.0)*(PWM_modulus+1);
 238:../source/FTM.c **** 	PWM_duty=percent*(PWM_modulus+1)/100;
 1541              		.loc 2 238 0
 1542 000e FB88     		ldrh	r3, [r7, #6]
 1543 0010 0C4A     		ldr	r2, .L48
 1544 0012 1288     		ldrh	r2, [r2]
 1545 0014 0132     		adds	r2, r2, #1
 1546 0016 02FB03F3 		mul	r3, r2, r3
 1547 001a 0B4A     		ldr	r2, .L48+4
 1548 001c 82FB0312 		smull	r1, r2, r2, r3
 1549 0020 5211     		asrs	r2, r2, #5
 1550 0022 DB17     		asrs	r3, r3, #31
 1551 0024 D31A     		subs	r3, r2, r3
 1552 0026 9AB2     		uxth	r2, r3
 1553 0028 084B     		ldr	r3, .L48+8
 1554 002a 1A80     		strh	r2, [r3]	@ movhi
 239:../source/FTM.c **** 	FTM_SetCounter(ftm, Chn, PWM_duty);
 1555              		.loc 2 239 0
 1556 002c 074B     		ldr	r3, .L48+8
 1557 002e 1B88     		ldrh	r3, [r3]
 1558 0030 1A46     		mov	r2, r3
 1559 0032 B968     		ldr	r1, [r7, #8]
 1560 0034 F868     		ldr	r0, [r7, #12]
 1561 0036 FFF7FEFF 		bl	FTM_SetCounter
 240:../source/FTM.c **** }
 1562              		.loc 2 240 0
 1563 003a 00BF     		nop
 1564 003c 1037     		adds	r7, r7, #16
 1565              		.cfi_def_cfa_offset 8
 1566 003e BD46     		mov	sp, r7
 1567              		.cfi_def_cfa_register 13
 1568              		@ sp needed
 1569 0040 80BD     		pop	{r7, pc}
 1570              	.L49:
 1571 0042 00BF     		.align	2
 1572              	.L48:
 1573 0044 00000000 		.word	PWM_modulus
 1574 0048 1F85EB51 		.word	1374389535
 1575 004c 00000000 		.word	PWM_duty
 1576              		.cfi_endproc
 1577              	.LFE148:
 1579              		.text
 1580              	.Letext0:
 1581              		.file 3 "c:\\nxp\\mcuxpressoide_10.2.0_759\\ide\\tools\\redlib\\include\\sys\\libconfig-arm.h"
 1582              		.file 4 "c:\\nxp\\mcuxpressoide_10.2.0_759\\ide\\tools\\redlib\\include\\stdint.h"
 1583              		.file 5 "C:\\Users\\marth\\Documents\\ITBA\\Labo de micros\\Tps\\FTM_PWM\\CMSIS/MK64F12.h"
 1584              		.file 6 "C:\\Users\\marth\\Documents\\ITBA\\Labo de micros\\Tps\\FTM_PWM\\CMSIS/system_MK64F12.h"
 1585              		.file 7 "../source/FTM.h"
 1586              		.file 8 "../source/gpio.h"
DEFINED SYMBOLS
                            *ABS*:00000000 FTM.c
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:18     .text.NVIC_EnableIRQ:00000000 $t
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:24     .text.NVIC_EnableIRQ:00000000 NVIC_EnableIRQ
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:64     .text.NVIC_EnableIRQ:00000030 $d
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:73     .data.PWM_modulus:00000000 PWM_modulus
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:70     .data.PWM_modulus:00000000 $d
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:80     .data.PWM_duty:00000000 PWM_duty
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:77     .data.PWM_duty:00000000 $d
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:83     .text.FTM0_IRQHandler:00000000 $t
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:90     .text.FTM0_IRQHandler:00000000 FTM0_IRQHandler
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:136    .text.PWM_ISR:00000000 PWM_ISR
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:129    .text.PWM_ISR:00000000 $t
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:765    .text.FTM_ClearOverflowFlag:00000000 FTM_ClearOverflowFlag
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:157    .text.PWM_ISR:00000010 $d
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:162    .text.FTM_Init:00000000 $t
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:169    .text.FTM_Init:00000000 FTM_Init
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:321    .text.PWM_Init:00000000 PWM_Init
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:305    .text.FTM_Init:000000fc $d
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:314    .text.PWM_Init:00000000 $t
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:444    .text.FTM_SetPrescaler:00000000 FTM_SetPrescaler
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:492    .text.FTM_SetModulus:00000000 FTM_SetModulus
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:670    .text.FTM_SetOverflowMode:00000000 FTM_SetOverflowMode
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:808    .text.FTM_SetWorkingMode:00000000 FTM_SetWorkingMode
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:1153   .text.FTM_SetPulseWidthModulationLogic:00000000 FTM_SetPulseWidthModulationLogic
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:1523   .text.set_DutyPWM:00000000 set_DutyPWM
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:584    .text.FTM_StartClock:00000000 FTM_StartClock
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:429    .text.PWM_Init:000000a8 $d
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:437    .text.FTM_SetPrescaler:00000000 $t
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:485    .text.FTM_SetModulus:00000000 $t
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:536    .text.FTM_GetModulus:00000000 $t
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:543    .text.FTM_GetModulus:00000000 FTM_GetModulus
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:577    .text.FTM_StartClock:00000000 $t
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:620    .text.FTM_StopClock:00000000 $t
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:627    .text.FTM_StopClock:00000000 FTM_StopClock
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:663    .text.FTM_SetOverflowMode:00000000 $t
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:712    .text.FTM_IsOverflowPending:00000000 $t
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:719    .text.FTM_IsOverflowPending:00000000 FTM_IsOverflowPending
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:758    .text.FTM_ClearOverflowFlag:00000000 $t
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:801    .text.FTM_SetWorkingMode:00000000 $t
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:867    .text.FTM_GetWorkingMode:00000000 $t
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:874    .text.FTM_GetWorkingMode:00000000 FTM_GetWorkingMode
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:916    .text.FTM_SetInputCaptureEdge:00000000 $t
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:923    .text.FTM_SetInputCaptureEdge:00000000 FTM_SetInputCaptureEdge
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:982    .text.FTM_GetInputCaptureEdge:00000000 $t
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:989    .text.FTM_GetInputCaptureEdge:00000000 FTM_GetInputCaptureEdge
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:1031   .text.FTM_SetOutputCompareEffect:00000000 $t
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:1038   .text.FTM_SetOutputCompareEffect:00000000 FTM_SetOutputCompareEffect
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:1097   .text.FTM_GetOutputCompareEffect:00000000 $t
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:1104   .text.FTM_GetOutputCompareEffect:00000000 FTM_GetOutputCompareEffect
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:1146   .text.FTM_SetPulseWidthModulationLogic:00000000 $t
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:1212   .text.FTM_GetPulseWidthModulationLogic:00000000 $t
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:1219   .text.FTM_GetPulseWidthModulationLogic:00000000 FTM_GetPulseWidthModulationLogic
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:1261   .text.FTM_SetCounter:00000000 $t
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:1268   .text.FTM_SetCounter:00000000 FTM_SetCounter
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:1309   .text.FTM_GetCounter:00000000 $t
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:1316   .text.FTM_GetCounter:00000000 FTM_GetCounter
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:1355   .text.FTM_SetInterruptMode:00000000 $t
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:1362   .text.FTM_SetInterruptMode:00000000 FTM_SetInterruptMode
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:1413   .text.FTM_IsInterruptPending:00000000 $t
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:1420   .text.FTM_IsInterruptPending:00000000 FTM_IsInterruptPending
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:1464   .text.FTM_ClearInterruptFlag:00000000 $t
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:1471   .text.FTM_ClearInterruptFlag:00000000 FTM_ClearInterruptFlag
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:1516   .text.set_DutyPWM:00000000 $t
C:\Users\marth\AppData\Local\Temp\ccgx3FCu.s:1573   .text.set_DutyPWM:00000044 $d
                           .group:00000000 wm4.0.33db8b643112917ec54934b4f2c2f387
                           .group:00000000 wm4.redlib_version.h.16.f905717e4b3a91dcbdbb631865150df4
                           .group:00000000 wm4.libconfigarm.h.18.1ad1d24f96d0dc8c4cf52dc19b0aa2c7
                           .group:00000000 wm4.stdint.h.30.079ac5d9930c76ab215c1ab68adcbe08
                           .group:00000000 wm4.stdbool.h.15.fddf1cb2402fd739d8e2516677869231
                           .group:00000000 wm4.fsl_device_registers.h.32.f10b25a7fd7ad45b9a40904c33f28816
                           .group:00000000 wm4.MK64F12.h.105.e884e5c80776532d2ec0f5c21e2ea7cb
                           .group:00000000 wm4.core_cm4.h.42.42f38327ee0970d80f60117e6a3ba2b0
                           .group:00000000 wm4.cmsis_gcc.h.36.39970cb43ce4b53c82644a1f9bc2eab9
                           .group:00000000 wm4.core_cm4.h.223.7b48c9958ef5573320c4765074c8b0ce
                           .group:00000000 wm4.system_MK64F12.h.109.c6d21568e03be21b21c922eb7345d6e3
                           .group:00000000 wm4.MK64F12.h.475.cafa8e1e521f96f0b72de286863a6df7
                           .group:00000000 wm4.MK64F12_features.h.92.512cea46d882153168efeec0bc3a9da7
                           .group:00000000 wm4.hardware.h.27.0531344360c1b4ef1fba1263e2a4c488
                           .group:00000000 wm4.FTM.h.58.b58afedd36723615d5feb2e51d47284f
                           .group:00000000 wm4.gpio.h.10.94c0b7db23b058668f6a581846169eb2

NO UNDEFINED SYMBOLS
